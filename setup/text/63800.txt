Does Java impose any further restrictions on filenames other than the underlying operating system? operating-system filesystems No, you can escape any character that Java doesn't allow in String literals but the filesystem allows. Also, if trying to port an Windows app to Mac or Unix it is best to use: File.separator
 To determine the correct file separator to use on each platform. When you create a new File the inputted arguments will be normalized by a platform specific implementation of the java.io.FileSystem class. There are no Java specific restrictions that I know of. and yes, always use File.separator. Java supports any string that can be expressed in Unicode (subject to some ridiculously long maximum length, Integer.MAX_VALUE), and file names are just another kind of string. Of course, this means that you can try and refer to a file using a name that isn't supported by the underlying Operating System. If you do this, you'll get some kind of IOException when you try and use the File reference...