Template Engines for Spring Framework spring velocity template-engine freemarker When you say Spring Framework are you referring to Spring MVC or just the core Spring concepts (dependency injection, AOP, etc)? If it is really the concept of Spring you like then I recommend checking out Stripes. Stripes makes using Spring dependency injection really easy and offers a lot in the way of writing controllers and views. Unlike Spring MVC it is configured primarily through annotations which is something you will either love or hate. On the topic of template engines it really boils down to identifying what exactly you do not like about jsp in the first place. Personally I find Java web development is hindered more by the controller frameworks than the templating language. Stripes is the best I have tried so far, but compared to Django and Rails it still feels a little cumbersome. Not exactly answering your question since it isn't a template engine, but you may want to look at Grails. It uses Spring MVC so the feel would be familiar. By default the views are Groovy Server Pages (.gsp) and I have found them very intuitive. It all goes down to what you need. For my current project, I am making an heavy use of FreeMarker because it was the framework that was tailored for the job I had to do. There is no silver bullets: You have to try them and choose one for yourself (And your team). I've heard some nice reviews about Stripes from my colleagues who are actually doing some Web-Related Development. We have been using Sitemesh template engine in our spring web app and we are very happy with it. Reduces lot of maintenance work. An example of how to integrate with spring can be found in this blog I would also like to add that your choice of template engine depends on the type of the output as well. If you know that your app will only have HTML output, I would suggest to stick with the standard JSP/JSTL. If your app requirement is also Excel, PDF or other format output, I would recommend Freemarker or Velocity. I personally like Freemarker better. I prefer Velocity to Freemarker for the clarity/simplicity of the syntax and professionalism of the community. I also get a lot of mileage out of the VelocityTools library. Freemarker can be a bit more intimidating but is also totally solid. It lacks VelocityTools, but makes up for it with native support for JSP tag libraries. Either of these template languages is a great improvement over JSP/JSTL, if you ask me. Try Spring Modules, which has support for web template engines like Freemarker, Groovy, Velocity, WebMacro and XSLT. I have not investigated using it with Spring yet, but I would not use any template engine but StringTemplate (see http://www.cs.usfca.edu/~parrt/papers/mvc.templates.pdf for why). If you are set on Spring, then I would figure out how to integrate it with StringTemplate, although I suspect that it has already been done before. If you like the Scala programming language you might like Scalate as it allows you to use powerful Scala expressions instead of the limited JSP/JSF/JSTL EL expression language - while being completely statically typed so that templates are checked at edit/compile time for errors. The Scaml templates in Scalate let you write really DRY templates (Rails fans tend to love Haml and Scaml is the Scala port of Haml) - though if you're used to JSP you'd probably be better off starting with Ssp templates in Scalate which are JSP-like. Getting away from JSPs and using a templating framework is most definitely the way to go. I've used Velocity, but recently I've discovered Thymeleaf: It fits very nicely with Spring. There is a nice tutorial, Spring MVC view layer: Thymeleaf vs. JSP at the site showing why you would want to use thymeleaf instead of JSPs. I am Thymeleaf's author, and I would like to recommend you to have a look it. Although it is not exclusively SpringMVC-oriented (it can be used without this library), I designed it from the ground up to be a nice replacement for the current view options in Spring MVC: Velocity, Freemarker... and especially JSP. Thymeleaf is easy to use, elegant, XHTML and HTML5-compatible, extremely extensible, and it allows you to create "Natural Templates", this is, templates that are perfectly browser-displayable pages --great for prototyping!--, as you can see in the "Thymeleaf vs JSP" article already mentioned in other comment. There is also a comprehensive set of tutorials on the web site, and also some small articles that will help you understand the basics. Have a look at it, and I honestly think you will never come back to JSP ;-) Regards. try Mixer2. http://mixer2.org/ You can write template without any custom tag or engine specific syntax. There are sample web application with SpringMVC+Mixer2. http://mixer2.org/site/springmvcsample.html