What's main differences between "new" ASP.NET MVC framework and typical Java Struts projects? .net ruby-on-rails asp.net-mvc struts I'd say that is a fair comment. MVC isn't new. It's just new to the Microsoft world. LINQ to SQL is definitely not a port of Hibernate. That's NHibernate, which IMHO is more flexible than LINQ to SQL in terms of how the object model is related to your DB schema. As for similarities, they indeed are similar, as ASP.NET MVC is indeed an effort to get the best out of existing web application MVC frameworks and put it into ASP.NET. I think you're mostly right. While my MVC experience is largely with RoR, I read up on Struts before the opportunity to work with it evaporated. IIRC, Struts and RoR are both fairly clean implementations of MVC as I see it defined on Wikipedia, to pick an obvious reference. What's more interesting is that ASP.NET's MVC framework appears also to be a fairly close match. I was listening to a podcast that, amongst other things, seemed to confirm this. Why interesting? Because Microsoft didn't crazy trying to outdo what was already out there, just make the same thing available within their environment. How much simpler would web page design and styling be if they'd taken that approach when developing IE? Of course, it's not always that simple: how much poorer would the web experience be if MS hadn't "extended" the standards and given us, or example, XmlHttpRequest() ? We'd probably still be waiting for it to be approved by the standards body so someone could invent AJAX...