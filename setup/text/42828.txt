Mixing jsp and jsf jsp jsf have you looked into using facelets? It lets you get rid of the whole JSF / JSP differences (it's an alternate and superior view controller). It also supports great design-time semantics with the jsfc tag... <input type="text" jsfc="#{SomeBean.property}" class="foo" />
 gets translated internally to the correct JSF stuff, so you can work with your existing tools. To solve this one I'd probably create a JSF fragment that only includes your form, then use a tag to include it in my JSF page. That solution is probably a little fragile depending on your environment though. EDIT: See Chris Hall's answer, FacesContext is not available outside the FacesServlet. Create a custom JSP tag handler. You can then retrieve the bean from session scope, and then initialize it on the fly. See this tutorial for more details. Actually, I've resolved this by removing bean from session, so it has to be generated again when jsf page is called. Then I pick up get parameters from a request in constructor. You can retrieve a managed bean inside of a tag library using something like this: FacesContext context = FacesContext.getCurrentInstance();
Object myBean = context.getELContext().getELResolver().getValue(context.getELContext(), null, "myBeanName");
 However, you'd need to use the tag library from one of your JSF pages. FacesContext.getCurrentInstance() returns null when it's called outside of the FacesServlet.