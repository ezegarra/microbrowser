Knowing which java.exe process to kill on a windows machine windows Have you tried using Process Explorer from SysInternals? It gives a much better idea of what is running within the process. Available free online here: http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx I'd suggest downloading Process Explorer from Sysinternals and looking at the different java.exe processes more closesly, that way you can get a better idea of which one to kill. http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx It's very intuitive and you can find the java.exe processes and right click and goto their properties, from there you can see their command line, time of creation, etc which can help you find the process you want to kill. Hope it helps. Using ProcessExplorer and hovering over the Java process will show the command line. Download Sysinternal's Process Explorer. It's a task manager much more powerfull than Windows's own manager. One of it's features is that you can see all the resources that each process is using (like registry keys, hard disk directories, named pipes, etc). So, browsing the resources that each java.exe process holds might help you determine wich one you want to kill. I usually find out by looking for the one that's using a certain log file directory. You could try opening Windows Task Manager, going to the Applications tab, right clicking the application and then selecting "Go To Process". This will automatically highlight the appropriate process in the Processes tab. If the application is not responding at all, then Process Explorer is a good option. If it's sort of responding, but not dying, sometimes bringing up task manager, and then moving another dialog over the java process will give you a clue. The java process that's taking up cpu cycles to redraw is the one you're looking for. In case you're developing software: use a java-launcher. I used for a few of my application [Exe4j][http://www.ej-technologies.com/products/exe4j/overview.html] and it worked very well. When the application is started, it's listed as for example "myserverapp.exe" or "myapp" in the windows tasks manager. There are other lauchers too (don't known them by heart), few of them might be for free too. Using jps in the JDK will give you more information. More information is display with the -m, -l and -v options. Rather than using a third party tool, you can also make a pretty good guess by looking at all the columns in task manager if you know roughly what the various java processes on your system are. From the Processes tab, use View-> Select Columns and add PID, CPU Time, VM Size, and Thread count. Knowing roughly what the process is doing should help narrow it down. For example, in a client-server app, the server will likely use more memory, have more threads, and have used more CPU time because it has been running longer. If you're killing a process because it's stuck, it might simply be using more CPU right now. MAX java heap memory is usually directly reflected in VM Size. So if you're using -Xmx flags, the process with the larger setting will have a larger VM Size. Run jps -lv which shows PIDs and command lines of all running Java processes. Determine PID of the task you want to kill. Then use command: taskkill /PID <pid> to kill the misbehaving process. If you're using Java 6, try jvisualvm from the JDK bin directory. If you can't run a GUI application like ProcessExplorer and you're looking for the "Command Line" arguments of the processes then you can use "wmic" via the command line. For example: wmic PROCESS get Processid,Caption,Commandline
 If you want to look for a specific process you can do this: wmic PROCESS where "name like '%java%'" get Processid,Caption,Commandline
 The output from this will show you all of the command line arguments of processes like "java."