Large File Download flash silverlight browser bittorrent? There have been a few web-based versions already (bitlet, w3btorrent), and Azureus was built using java, so it's definitely possible. Edit: @TonyB is it limited to port 80? Please don't use ActiveX... I am so sick of sites that are only viewable in IE. My actual preference, as a user, in these situations is to download a lightweight .exe file that downloads the file for you. @travis Unfortunately It has to be over HTTP inside the users browser. I'll update the question to be more clear about that. Can you split the files into pieces and then rejoin them after the download? @levand The problem only exist in IE (it works in Firefox) so while ActiveX would only work on IE, IE is the only one we need the work around for. @travis - interesting idea. Not sure if it will work for what I need but I'll keep it in mind. I'm hoping to find something to integrate with the existing site instead of having to go out to a third party. It would also require me to setup a bittorrent tracker which wouldn't be as easy as it sounds for this application because different users will have different access to different files. @jjnguy I'm looking for a java applet or ActiveX component that will do that for me. These are non-technical users so we really just want to have them click download and the full file ends up in the specified location @levand: My actual preference, as a user, in these situations is to download a lightweight .exe file that downloads the file for you. That's a dealbreaker for many, many sites. Users either are or should be extremely reluctant to download .exe files from websites and run them willy-nilly. Even if they're not always that cautious, incautious behaviour is not something we should encourage as responsible developers. If you're working on something along the lines of a company intranet, a .exe is potentially an okay solution, but for the public web? No way. @TonyB: What is the best way to do this without using FTP. I'm sorry, but I have to ask why the requirement. Your question reads to me along the lines of "what's the best way to cook a steak without any meat or heat source?" FTP was designed for this sort of thing. @ceejayoz I totally agree but its part of the requirement for our client. There will be FTP access but each user will have the option of downloading via HTTP or FTP. There are some users that will be behind corporate firewalls that don't permit FTP I have seen other sites do this in the past (MSDN, Adobe) so I was hoping there is something out there already instead of having to make one in house (and learning java and/or ActiveX) I say click-once installed download manager, similar to msdn. But becoming a CDN without a more optimized protocol for the job is no easy task. I can't imagine a business model that can be worthwhile enough to have such large file downloads as a core competency unless you are doing something like msdn. If you create a thick client, you at least get the chance to get some more face time with the users, for advertising or some other revenue model, since you will probably be paying in the hundreds of thousands of dollars to host such a service. The problem with the applet approach mentioned is that unless you have the end user modify their java security properties your applet will not have permission to save to the hard drive. It may be possible using Java Web Start (aka JNLP). I think that if it is a signed app it can get the extra permission to write to the hard drive. This is not too different from the download an exe approach. The problem with this is that the user has to have the correct version of Java installed and has to have the Java Web Start capability setup correctly. I would recommend the exe approach as it will be the easiest for the non-technical users to use. If you don't want to write java code in-house, there are commercial applet solutions available: Vault MyDownloder Both of them have eval versions that you can download and test. There are some users that will be behind corporate firewalls that don't permit FTP... Are users with restrictive firewalls like that likely to be permitted to install and run a .exe file from your website? A few ideas: Blizzard use a light-weight .exe BitTorrent wrapper for their patches. I'm not entirely sure how it is done, but it looks like a branded version of the official BitTorrent client. Upload to Amazon S3, provide the torrent link of the file (all S3 files are automatically BitTorrent-enabled), plus the full HTTP download link as alternative. See S3 documentation Take a look at cURL. This article describes how to do a multi-part simultaneous download via HTTP. I've used cURL in the past to manage FTP downloads of files over 300GB. Another tip: You can boost download times even more if you increase the size of the TCP Window on the client's NIC configuration. Set it as high as the OS allows and you should see up to 2x improvement depending on your physical network. This worked for me on Windows 2000 and 2003 when FTPing over a WAN. The down side is it may increase overhead for all other network traffic that wants only a few KB for a network packet, but is now forced to send/recv in 64KB packets. Your mileage may vary. Edit: What exactly is this you're trying to accomplish? Who is the audience? I'm assumed for a bit that you're looking to do this over your own network; but you seem to imply the client side is someone on the internet. I think we need clearer requirements. What about saying "We recommend that you install Free Download Manager to download this file. You will have the added benefit of being able to resume the file and accelerate the download." Personally I never download anything using the built in browser download tool unless I have to (e.g. Gmail attachments)