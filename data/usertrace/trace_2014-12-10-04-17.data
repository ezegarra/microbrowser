2014-12-10 04:17:45:0649, setup_loaddata_begin
2014-12-10 04:17:47:0864, setup_loaddata_end
2014-12-10 04:17:47:0895, setup_createactions_begin
2014-12-10 04:17:48:0082, setup_createactions_end
2014-12-10 04:17:54:0650, diag_itementered, id=35842, type=1
2014-12-10 04:17:54:0681, diag_itemexited, id=35842, type=1
2014-12-10 04:17:55:0087, diag_itementered, id=41894, type=1
2014-12-10 04:17:55:0149, diag_itemexited, id=41894, type=1
2014-12-10 04:17:55:0258, diag_itementered, id=34571, type=1
2014-12-10 04:17:55:0586, diag_itemexited, id=34571, type=1
2014-12-10 04:17:55:0664, diag_itementered, id=41894, type=1
2014-12-10 04:17:55:0742, diag_itemexited, id=41894, type=1
2014-12-10 04:18:09:0454, list_pattern_mouseentered, id=1, type=0
2014-12-10 04:18:09:0470, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:09:0501, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:09:0532, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:09:0548, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:09:0579, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:09:0595, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:10:0047, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:10:0063, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:10:0078, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:10:0110, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:10:0141, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:16:0943, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:16:0958, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:16:0974, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:16:0989, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:18:17:0005, list_pattern_mouseexited
2014-12-10 04:18:17:0348, diag_itemexited, id=1, type=4
2014-12-10 04:18:17:0348, diag_itementered, id=27065, type=1
2014-12-10 04:18:17:0395, diag_itemexited, id=27065, type=1
2014-12-10 04:18:17:0738, diag_itemexited, id=1, type=4
2014-12-10 04:18:17:0738, diag_itementered, id=27065, type=1
2014-12-10 04:18:18:0081, diag_itemexited, id=27065, type=1
2014-12-10 04:18:18:0128, diag_itemexited, id=1, type=4
2014-12-10 04:18:18:0191, diag_itemexited, id=4, type=4
2014-12-10 04:18:18:0191, diag_itementered, id=564, type=1
2014-12-10 04:18:18:0378, diag_itemexited, id=564, type=1
2014-12-10 04:18:18:0581, diag_itemexited, id=4, type=4
2014-12-10 04:18:18:0674, diag_itemexited, id=3, type=4
2014-12-10 04:18:18:0674, diag_itementered, id=46898, type=1
2014-12-10 04:18:19:0891, diag_itemexited, id=46898, type=1
2014-12-10 04:18:20:0187, diag_itemexited, id=3, type=4
2014-12-10 04:18:20:0219, diag_itementered, id=40663, type=1
2014-12-10 04:18:20:0265, diag_itemexited, id=40663, type=1
2014-12-10 04:18:20:0577, list_pattern_mouseentered, id=3, type=0
2014-12-10 04:18:20:0577, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:20:0624, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:20:0640, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:20:0671, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:20:0687, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:20:0780, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:21:0779, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:21:0794, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:21:0825, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:21:0841, list_pattern_mousemoved, id=3, type=0
2014-12-10 04:18:21:0857, list_pattern_mouseexited
2014-12-10 04:18:22:0013, diag_itemexited, id=3, type=4
2014-12-10 04:18:22:0044, diag_itementered, id=25331, type=1
2014-12-10 04:18:22:0091, diag_itemexited, id=25331, type=1
2014-12-10 04:18:22:0200, diag_itementered, id=25331, type=1
2014-12-10 04:18:22:0247, diag_itemexited, id=25331, type=1
2014-12-10 04:18:22:0543, diag_itemexited, id=3, type=4
2014-12-10 04:18:22:0543, diag_itementered, id=46898, type=1
2014-12-10 04:18:24:0150, diag_itemexited, id=46898, type=1
2014-12-10 04:18:24:0197, diag_itemexited, id=3, type=4
2014-12-10 04:18:24:0212, list_pattern_mouseentered, id=4, type=0
2014-12-10 04:18:24:0212, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0259, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0290, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0399, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0431, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0446, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0696, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0711, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0727, list_pattern_mousemoved, id=4, type=0
2014-12-10 04:18:24:0758, list_pattern_mouseexited
2014-12-10 04:18:24:0836, diag_itementered, id=47045, type=1
2014-12-10 04:18:24:0867, diag_itemexited, id=47045, type=1
2014-12-10 04:18:25:0133, diag_itemexited, id=3, type=4
2014-12-10 04:18:25:0273, diag_itemexited, id=4, type=4
2014-12-10 04:18:25:0273, diag_itementered, id=36347, type=1
2014-12-10 04:18:28:0471, edge_create, Tuple[0,1,0.8440857380785538,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0487, answer_create, 498321
2014-12-10 04:18:28:0487, edge_create, Tuple[1,2,0.48632900105516086,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0487, answer_create, 36356
2014-12-10 04:18:28:0487, edge_create, Tuple[1,3,0.9955832080799358,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0487, answer_create, 36364
2014-12-10 04:18:28:0487, edge_create, Tuple[1,4,0.1468619307070107,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0487, answer_create, 41510
2014-12-10 04:18:28:0487, edge_create, Tuple[1,5,0.5872547361733359,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0487, answer_create, 41930
2014-12-10 04:18:28:0502, edge_create, Tuple[1,6,0.7887707489399088,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, answer_create, 498329
2014-12-10 04:18:28:0502, edge_create, Tuple[1,7,0.7873713820601635,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, answer_create, 499272
2014-12-10 04:18:28:0502, edge_create, Tuple[1,8,0.21149208019089327,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, answer_create, 499289
2014-12-10 04:18:28:0502, edge_create, Tuple[1,9,0.5463557713686494,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, answer_create, 41973
2014-12-10 04:18:28:0502, edge_create, Tuple[1,10,0.026685521037207338,4,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, edge_create, Tuple[0,11,0.5471364220804554,2,1.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, pattern_create, 4
2014-12-10 04:18:28:0502, edge_create, Tuple[11,12,0.5612721415269356,2,1.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, edge_create, Tuple[0,13,0.7465930698800408,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0502, edge_create, Tuple[13,14,0.8625113911827827,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0520, edge_create, Tuple[13,15,0.4424486962546079,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0520, edge_create, Tuple[13,16,0.36124585365257567,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0535, edge_create, Tuple[13,17,0.4512421061528522,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0551, edge_create, Tuple[13,18,0.4091762314834727,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0551, edge_create, Tuple[13,19,0.17097733966348505,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0567, edge_create, Tuple[13,20,0.8236356789363605,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0567, edge_create, Tuple[13,21,0.7229788140446102,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0582, edge_create, Tuple[13,22,0.3591636112697396,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0582, edge_create, Tuple[13,23,0.6082988272487125,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0598, edge_create, Tuple[13,24,0.8052125787827666,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0598, edge_create, Tuple[13,25,0.10226696976901195,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0613, edge_create, Tuple[13,26,0.07515780060095223,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0613, edge_create, Tuple[13,27,0.06460083176080045,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0629, edge_create, Tuple[13,28,0.11064538629462684,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0629, edge_create, Tuple[13,29,0.7207064710188202,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0645, edge_create, Tuple[13,30,0.8500624935242199,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0660, edge_create, Tuple[13,31,0.9217963322362775,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0660, edge_create, Tuple[13,32,0.5890181863862451,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0676, edge_create, Tuple[13,33,0.20728227060433513,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0676, edge_create, Tuple[13,34,0.24828861290532778,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0691, edge_create, Tuple[13,35,0.8532268734599827,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0691, edge_create, Tuple[13,36,0.830430884114392,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:28:0738, discussion_open, 36347
2014-12-10 04:18:28:0738, diag_itemclicked, id=36347, type=1
2014-12-10 04:18:28:0738, diag_itemexited, id=36347, type=1
2014-12-10 04:18:29:0066, diag_detail_itementered, id=0.026685521037207338, type=4
2014-12-10 04:18:29:0144, diag_detail_itemexited, id=0.026685521037207338, type=4
2014-12-10 04:18:29:0175, diag_detail_itementered, id=0.026685521037207338, type=4
2014-12-10 04:18:29:0222, diag_detail_itemexited, id=0.026685521037207338, type=4
2014-12-10 04:18:30:0969, diag_detail_itementered, id=4, type=0
2014-12-10 04:18:31:0125, diag_detail_itemexited, id=4, type=0
2014-12-10 04:18:31:0344, diag_detail_itementered, id=0.5612721415269356, type=2
2014-12-10 04:18:31:0375, diag_detail_itemexited, id=0.5612721415269356, type=2
2014-12-10 04:18:31:0562, diag_detail_itementered, id=0.5612721415269356, type=2
2014-12-10 04:18:31:0593, diag_detail_itemexited, id=0.5612721415269356, type=2
2014-12-10 04:18:31:0624, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:31:0656, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:31:0656, diag_detail_itementered, id=0.8500624935242199, type=1
2014-12-10 04:18:31:0687, diag_detail_itemexited, id=0.8500624935242199, type=1
2014-12-10 04:18:31:0936, diag_detail_itementered, id=0.07515780060095223, type=1
2014-12-10 04:18:31:0968, diag_detail_itemexited, id=0.07515780060095223, type=1
2014-12-10 04:18:32:0108, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:32:0264, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:32:0326, diag_detail_itementered, id=0.8440857380785538, type=4
2014-12-10 04:18:32:0373, diag_detail_itemexited, id=0.8440857380785538, type=4
2014-12-10 04:18:32:0560, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:32:0685, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:32:0966, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:47:0006, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:47:0256, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:47:0926, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:51:0655, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:51:0686, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:51:0936, diag_detail_itementered, id=0.7465930698800408, type=1
2014-12-10 04:18:52:0139, diag_detail_itemexited, id=0.7465930698800408, type=1
2014-12-10 04:18:52:0154, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:53:0246, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:53:0262, diag_detail_itementered, id=0.7465930698800408, type=1
2014-12-10 04:18:53:0293, diag_detail_itemexited, id=0.7465930698800408, type=1
2014-12-10 04:18:53:0309, diag_detail_itementered, id=1347091026, type=3
2014-12-10 04:18:53:0340, diag_detail_itemexited, id=1347091026, type=3
2014-12-10 04:18:53:0387, diag_detail_itementered, id=63150, type=1
2014-12-10 04:18:53:0418, diag_detail_itemexited, id=63150, type=1
2014-12-10 04:18:53:0496, diag_detail_itementered, id=63150, type=1
2014-12-10 04:18:55:0430, diag_detail_itemexited, id=63150, type=1
2014-12-10 04:18:55:0493, diag_detail_itementered, id=63030, type=1
2014-12-10 04:18:55:0539, diag_detail_itemexited, id=63030, type=1
2014-12-10 04:18:55:0649, diag_detail_itementered, id=63030, type=1
2014-12-10 04:18:56:0382, diag_detail_itemexited, id=63030, type=1
2014-12-10 04:18:56:0491, diag_detail_itementered, id=0.8052125787827666, type=1
2014-12-10 04:18:56:0538, diag_detail_itemexited, id=0.8052125787827666, type=1
2014-12-10 04:18:56:0538, diag_detail_itementered, id=1347091026, type=3
2014-12-10 04:18:56:0569, diag_detail_itemexited, id=1347091026, type=3
2014-12-10 04:18:56:0585, diag_detail_itementered, id=36347, type=1
2014-12-10 04:18:56:0631, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:18:57:0318, diag_detail_itementered, id=4, type=0
2014-12-10 04:18:59:0517, diag_detail_itemclicked, id=4, type=0
2014-12-10 04:18:59:0673, edge_create, Tuple[0,1,0.8167442348876283,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0673, edge_create, Tuple[1,2,0.42555876045961905,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0689, edge_create, Tuple[1,3,0.7900478700578876,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0705, edge_create, Tuple[1,4,0.7705752872258167,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0705, edge_create, Tuple[1,5,0.3118866440284356,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0720, edge_create, Tuple[1,6,0.5910771782280119,1,0.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0720, edge_create, Tuple[0,7,0.29155337709987383,2,1.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0720, pattern_create, 3
2014-12-10 04:18:59:0720, edge_create, Tuple[7,8,0.7934044777472887,2,1.0,1418246266163,1418246266163]
2014-12-10 04:18:59:0736, pattern_open, 4
2014-12-10 04:18:59:0736, diag_detail_itemclicked, id=4, type=0
2014-12-10 04:19:01:0545, diag_detail_itementered, id=4, type=0
2014-12-10 04:19:01:0577, diag_detail_itemexited, id=4, type=0
2014-12-10 04:19:01:0577, diag_detail_itementered, id=0.29155337709987383, type=2
2014-12-10 04:19:01:0608, diag_detail_itemexited, id=0.29155337709987383, type=2
2014-12-10 04:19:01:0842, diag_detail_itementered, id=0.29155337709987383, type=2
2014-12-10 04:19:01:0889, diag_detail_itemexited, id=0.29155337709987383, type=2
2014-12-10 04:19:01:0982, diag_detail_itementered, id=4, type=0
2014-12-10 04:19:02:0107, diag_detail_itemexited, id=4, type=0
2014-12-10 04:19:02:0372, diag_detail_itementered, id=564, type=1
2014-12-10 04:19:23:0042, diag_detail_itemexited, id=564, type=1
2014-12-10 04:19:26:0053, diag_itementered, id=23402, type=1
2014-12-10 04:19:26:0085, diag_itemexited, id=23402, type=1
2014-12-10 04:19:26:0350, list_pattern_mouseentered, id=1, type=0
2014-12-10 04:19:26:0350, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:19:26:0397, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:19:26:0412, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:19:26:0428, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:19:26:0443, list_pattern_mousemoved, id=1, type=0
2014-12-10 04:19:26:0459, list_pattern_mouseexited
2014-12-10 04:19:32:0371, search_update, JUnit
2014-12-10 04:19:33:0931, list_mouseentered, id=34571, type=1
2014-12-10 04:19:33:0931, list_mousemoved, id=34571, type=1
2014-12-10 04:19:33:0947, list_mouseexited
2014-12-10 04:19:34:0867, diag_itementered, id=34571, type=1
2014-12-10 04:19:51:0419, diag_itemexited, id=34571, type=1
2014-12-10 04:19:52:0230, list_mouseentered, id=42102, type=1
2014-12-10 04:19:52:0230, list_mousemoved, id=42102, type=1
2014-12-10 04:19:52:0262, list_mousemoved, id=42102, type=1
2014-12-10 04:19:52:0277, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0293, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0308, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0324, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0340, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0355, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0371, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0386, list_mousemoved, id=34571, type=1
2014-12-10 04:19:52:0386, list_mouseexited
2014-12-10 04:19:55:0319, search_update, XML
2014-12-10 04:19:56:0396, list_mouseentered, id=40663, type=1
2014-12-10 04:19:56:0396, list_mousemoved, id=40663, type=1
2014-12-10 04:19:56:0442, list_mousemoved, id=40663, type=1
2014-12-10 04:19:56:0458, list_mousemoved, id=40663, type=1
2014-12-10 04:19:56:0474, list_mousemoved, id=40663, type=1
2014-12-10 04:19:57:0285, list_mousemoved, id=40663, type=1
2014-12-10 04:19:57:0300, list_mousemoved, id=40663, type=1
2014-12-10 04:19:57:0316, list_mousemoved, id=40663, type=1
2014-12-10 04:19:57:0332, list_mousemoved, id=40663, type=1
2014-12-10 04:19:57:0347, list_mousemoved, id=40663, type=1
2014-12-10 04:19:57:0363, list_mousemoved, id=40663, type=1
2014-12-10 04:19:57:0378, list_mouseexited
2014-12-10 04:19:58:0673, diag_itementered, id=33262, type=1
2014-12-10 04:20:03:0821, diag_itemexited, id=33262, type=1
2014-12-10 04:20:04:0149, diag_itementered, id=35785, type=1
2014-12-10 04:20:25:0240, diag_itemexited, id=35785, type=1
2014-12-10 04:20:25:0318, list_mouseentered, id=123, type=1
2014-12-10 04:20:25:0318, list_mousemoved, id=123, type=1
2014-12-10 04:20:25:0334, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0350, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0365, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0381, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0396, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0412, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0443, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0459, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0474, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0490, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0506, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0521, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0537, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0552, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0568, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0584, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0599, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0615, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0630, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0646, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0662, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0677, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0693, list_mousemoved, id=33262, type=1
2014-12-10 04:20:25:0708, list_mousemoved, id=35785, type=1
2014-12-10 04:20:25:0724, list_mousemoved, id=35785, type=1
2014-12-10 04:20:25:0740, list_mousemoved, id=40663, type=1
2014-12-10 04:20:25:0755, list_mouseexited
2014-12-10 04:20:29:0640, search_update, Networking
2014-12-10 04:20:45:0552, list_mouseentered, id=33960, type=1
2014-12-10 04:20:45:0552, list_mousemoved, id=33960, type=1
2014-12-10 04:20:45:0583, list_mousemoved, id=33960, type=1
2014-12-10 04:20:45:0599, list_mousemoved, id=33960, type=1
2014-12-10 04:20:45:0614, list_mousemoved, id=33960, type=1
2014-12-10 04:20:45:0614, list_mousemoved, id=33960, type=1
2014-12-10 04:20:45:0630, list_mousemoved, id=33960, type=1
2014-12-10 04:20:45:0645, list_mousemoved, id=33960, type=1
2014-12-10 04:20:45:0661, list_mousemoved, id=62929, type=1
2014-12-10 04:20:45:0677, list_mouseexited
2014-12-10 04:20:46:0987, diag_itementered, id=62929, type=1
2014-12-10 04:20:49:0748, edge_create, Tuple[0,1,0.2652850104863833,4,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0748, answer_create, 62996
2014-12-10 04:20:49:0748, edge_create, Tuple[1,2,0.32376557895350755,4,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0748, answer_create, 63155
2014-12-10 04:20:49:0764, edge_create, Tuple[1,3,0.0011109646267626339,4,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0764, answer_create, 5452194
2014-12-10 04:20:49:0764, edge_create, Tuple[1,4,0.9854909337740422,4,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0764, answer_create, 4300803
2014-12-10 04:20:49:0764, edge_create, Tuple[1,5,0.6110872600379601,4,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0764, edge_create, Tuple[0,6,0.28336677830840673,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0764, edge_create, Tuple[6,7,0.425042455002425,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0779, edge_create, Tuple[6,8,0.040394778032482925,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0781, edge_create, Tuple[6,9,0.4737453656084304,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0781, edge_create, Tuple[6,10,0.9675699154170997,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0797, edge_create, Tuple[6,11,0.35869942022690093,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0797, edge_create, Tuple[6,12,0.9373400733900782,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0813, edge_create, Tuple[6,13,0.52811227829104,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0813, edge_create, Tuple[6,14,0.5579121961370943,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0828, edge_create, Tuple[6,15,0.9021467695856057,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0828, edge_create, Tuple[6,16,0.9257241678525234,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0844, edge_create, Tuple[6,17,0.4041184157027121,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0859, edge_create, Tuple[6,18,0.5700639368110461,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0859, edge_create, Tuple[6,19,0.1572820855437268,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0875, edge_create, Tuple[6,20,0.5354609990920213,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0875, edge_create, Tuple[6,21,0.9392807489059434,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0891, edge_create, Tuple[6,22,0.9782051070978681,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0891, edge_create, Tuple[6,23,0.37888193197274955,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0906, edge_create, Tuple[6,24,0.30288629596965,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0906, edge_create, Tuple[6,25,0.403586927208325,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0922, edge_create, Tuple[6,26,0.7185532991884227,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0922, edge_create, Tuple[6,27,0.5639807133384295,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0937, edge_create, Tuple[6,28,0.6529290333146337,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0937, edge_create, Tuple[6,29,0.1738355541295329,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0953, edge_create, Tuple[6,30,0.9937042527458032,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0953, edge_create, Tuple[6,31,0.20715159939242322,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0969, edge_create, Tuple[6,32,0.9104799471537938,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0969, edge_create, Tuple[6,33,0.7183030039040849,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0984, edge_create, Tuple[6,34,0.5972982452990873,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:49:0984, edge_create, Tuple[6,35,0.22367341146053088,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0000, edge_create, Tuple[6,36,0.7273646837676183,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0000, edge_create, Tuple[6,37,0.1676462861074529,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0015, edge_create, Tuple[6,38,0.5576265068826974,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0031, edge_create, Tuple[6,39,0.8482308674057463,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0031, edge_create, Tuple[6,40,0.3060555370306597,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0047, edge_create, Tuple[6,41,0.1942403965508981,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0047, edge_create, Tuple[6,42,0.7591439133520187,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0062, edge_create, Tuple[6,43,0.6537100356068963,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0062, edge_create, Tuple[6,44,0.6772324695314157,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0078, edge_create, Tuple[6,45,0.39968770801571396,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0078, edge_create, Tuple[6,46,0.8424554986594658,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0093, edge_create, Tuple[6,47,0.7028150021360189,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0093, edge_create, Tuple[6,48,0.9455304241989334,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0109, edge_create, Tuple[6,49,0.9190260013706696,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0109, edge_create, Tuple[6,50,0.6061960392401324,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0125, edge_create, Tuple[6,51,0.2446454905305031,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0125, edge_create, Tuple[6,52,0.8562867980667228,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0140, edge_create, Tuple[6,53,0.4902007012361802,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0140, edge_create, Tuple[6,54,0.3383234478814011,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0156, edge_create, Tuple[6,55,0.29903919049397354,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0156, edge_create, Tuple[6,56,0.2558293103967434,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0171, edge_create, Tuple[6,57,0.8086564460785132,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0171, edge_create, Tuple[6,58,0.9896982680596732,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0187, edge_create, Tuple[6,59,0.9333974465693737,1,0.0,1418246266163,1418246266163]
2014-12-10 04:20:50:0203, discussion_open, 62929
2014-12-10 04:20:50:0203, diag_itemclicked, id=62929, type=1
2014-12-10 04:20:51:0685, diag_itemexited, id=62929, type=1
2014-12-10 04:20:51:0716, diag_detail_itementered, id=11930, type=1
2014-12-10 04:20:51:0763, diag_detail_itemexited, id=11930, type=1
2014-12-10 04:20:51:0872, diag_detail_itementered, id=0.35869942022690093, type=1
2014-12-10 04:20:51:0887, diag_detail_itemexited, id=0.35869942022690093, type=1
2014-12-10 04:20:51:0903, diag_detail_itementered, id=0.4737453656084304, type=1
2014-12-10 04:20:51:0934, diag_detail_itemexited, id=0.4737453656084304, type=1
2014-12-10 04:20:51:0981, diag_detail_itementered, id=0.28336677830840673, type=1
2014-12-10 04:20:52:0012, diag_detail_itemexited, id=0.28336677830840673, type=1
2014-12-10 04:20:52:0059, diag_detail_itementered, id=0.9333974465693737, type=1
2014-12-10 04:20:52:0090, diag_detail_itemexited, id=0.9333974465693737, type=1
2014-12-10 04:20:52:0184, diag_detail_itementered, id=0.9333974465693737, type=1
2014-12-10 04:20:52:0215, diag_detail_itemexited, id=0.9333974465693737, type=1
2014-12-10 04:20:52:0402, diag_detail_itementered, id=62929, type=1
2014-12-10 04:21:05:0740, diag_detail_itemexited, id=62929, type=1
2014-12-10 04:21:05:0756, diag_detail_itementered, id=0.28336677830840673, type=1
2014-12-10 04:21:05:0787, diag_detail_itemexited, id=0.28336677830840673, type=1
2014-12-10 04:21:05:0787, diag_detail_itementered, id=-2096462330, type=3
2014-12-10 04:21:05:0834, diag_detail_itemexited, id=-2096462330, type=3
2014-12-10 04:21:06:0224, diag_detail_itementered, id=15949, type=1
2014-12-10 04:21:13:0073, diag_detail_itemexited, id=15949, type=1
2014-12-10 04:21:13:0400, diag_detail_itementered, id=0.7183030039040849, type=1
2014-12-10 04:21:13:0447, diag_detail_itemexited, id=0.7183030039040849, type=1
2014-12-10 04:21:13:0463, diag_detail_itementered, id=-2096462330, type=3
2014-12-10 04:21:13:0525, diag_detail_itemexited, id=-2096462330, type=3
2014-12-10 04:21:13:0525, diag_detail_itementered, id=0.5639807133384295, type=1
2014-12-10 04:21:13:0572, diag_detail_itemexited, id=0.5639807133384295, type=1
2014-12-10 04:21:13:0572, diag_detail_itementered, id=0.30288629596965, type=1
2014-12-10 04:21:13:0821, diag_detail_itemexited, id=0.30288629596965, type=1
2014-12-10 04:21:13:0821, diag_detail_itementered, id=-2096462330, type=3
2014-12-10 04:21:14:0196, diag_detail_itemexited, id=-2096462330, type=3
2014-12-10 04:21:14:0274, diag_detail_itementered, id=0.9333974465693737, type=1
2014-12-10 04:21:14:0321, diag_detail_itemexited, id=0.9333974465693737, type=1
2014-12-10 04:21:14:0477, diag_detail_itementered, id=0.9333974465693737, type=1
2014-12-10 04:21:14:0508, diag_detail_itemexited, id=0.9333974465693737, type=1
2014-12-10 04:21:14:0679, diag_detail_itementered, id=0.9333974465693737, type=1
2014-12-10 04:21:14:0711, diag_detail_itemexited, id=0.9333974465693737, type=1
2014-12-10 04:21:15:0631, diag_detail_itementered, id=0.9333974465693737, type=1
2014-12-10 04:21:15:0662, diag_detail_itemexited, id=0.9333974465693737, type=1
2014-12-10 04:21:15:0662, diag_detail_itementered, id=62929, type=1
2014-12-10 04:21:15:0709, diag_detail_itemexited, id=62929, type=1
2014-12-10 04:21:15:0709, diag_detail_itementered, id=0.9373400733900782, type=1
2014-12-10 04:21:15:0740, diag_detail_itemexited, id=0.9373400733900782, type=1
2014-12-10 04:21:15:0740, diag_detail_itementered, id=0.1572820855437268, type=1
2014-12-10 04:21:15:0771, diag_detail_itemexited, id=0.1572820855437268, type=1
2014-12-10 04:21:15:0771, diag_detail_itementered, id=0.37888193197274955, type=1
2014-12-10 04:21:15:0803, diag_detail_itemexited, id=0.37888193197274955, type=1
2014-12-10 04:21:15:0896, diag_detail_itementered, id=16689, type=1
2014-12-10 04:21:15:0943, diag_detail_itemexited, id=16689, type=1
2014-12-10 04:21:16:0083, diag_detail_itementered, id=46663, type=1
2014-12-10 04:21:18:0049, diag_detail_itemexited, id=46663, type=1
2014-12-10 04:21:18:0751, diag_detail_itementered, id=18088, type=1
2014-12-10 04:21:19:0391, diag_detail_itemexited, id=18088, type=1
2014-12-10 04:21:19:0406, diag_detail_itementered, id=62932, type=1
2014-12-10 04:21:20:0467, diag_detail_itemexited, id=62932, type=1
2014-12-10 04:21:20:0545, diag_detail_itementered, id=61559, type=1
2014-12-10 04:21:21:0278, diag_detail_itemexited, id=61559, type=1
2014-12-10 04:21:21:0309, diag_detail_itementered, id=59175, type=1
2014-12-10 04:21:22:0011, diag_detail_itemexited, id=59175, type=1
2014-12-10 04:21:22:0105, diag_detail_itementered, id=30171, type=1
2014-12-10 04:21:22:0807, diag_detail_itemexited, id=30171, type=1
2014-12-10 04:21:22:0994, diag_detail_itementered, id=64582, type=1
2014-12-10 04:21:23:0135, diag_detail_itemexited, id=64582, type=1
2014-12-10 04:21:23:0166, diag_detail_itementered, id=0.9104799471537938, type=1
2014-12-10 04:21:23:0197, diag_detail_itemexited, id=0.9104799471537938, type=1
2014-12-10 04:21:23:0213, diag_detail_itementered, id=0.7183030039040849, type=1
2014-12-10 04:21:23:0259, diag_detail_itemexited, id=0.7183030039040849, type=1
2014-12-10 04:21:23:0259, diag_detail_itementered, id=0.5972982452990873, type=1
2014-12-10 04:21:23:0415, diag_detail_itemexited, id=0.5972982452990873, type=1
2014-12-10 04:21:23:0431, diag_detail_itementered, id=0.22367341146053088, type=1
2014-12-10 04:21:23:0462, diag_detail_itemexited, id=0.22367341146053088, type=1
2014-12-10 04:21:23:0462, diag_detail_itementered, id=-2096462330, type=3
2014-12-10 04:21:23:0556, diag_detail_itemexited, id=-2096462330, type=3
2014-12-10 04:21:23:0556, diag_detail_itementered, id=0.9333974465693737, type=1
2014-12-10 04:21:23:0681, diag_detail_itemexited, id=0.9333974465693737, type=1
2014-12-10 04:21:24:0039, diag_detail_itementered, id=62929, type=1
2014-12-10 04:21:31:0153, diag_detail_itemexited, id=62929, type=1
2014-12-10 04:21:31:0169, diag_detail_itementered, id=0.28336677830840673, type=1
2014-12-10 04:21:31:0200, diag_detail_itemexited, id=0.28336677830840673, type=1
2014-12-10 04:21:31:0200, diag_detail_itementered, id=0.4737453656084304, type=1
2014-12-10 04:21:31:0231, diag_detail_itemexited, id=0.4737453656084304, type=1
2014-12-10 04:21:31:0231, diag_detail_itementered, id=-2096462330, type=3
2014-12-10 04:21:31:0278, diag_detail_itemexited, id=-2096462330, type=3
2014-12-10 04:21:31:0356, diag_detail_itementered, id=0.9104799471537938, type=1
2014-12-10 04:21:31:0403, diag_detail_itemexited, id=0.9104799471537938, type=1
2014-12-10 04:21:31:0715, diag_detail_itementered, id=45964, type=1
2014-12-10 04:21:33:0181, diag_detail_itemexited, id=45964, type=1
2014-12-10 04:21:33:0212, diag_detail_itementered, id=15949, type=1
2014-12-10 04:21:34:0429, diag_detail_itemexited, id=15949, type=1
2014-12-10 04:21:34:0460, diag_detail_itementered, id=36347, type=1
2014-12-10 04:21:34:0507, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:21:34:0928, diag_detail_itementered, id=36347, type=1
2014-12-10 04:21:35:0771, diag_detail_itemexited, id=36347, type=1
2014-12-10 04:21:35:0802, diag_detail_itementered, id=41894, type=1
2014-12-10 04:21:36:0691, diag_detail_itemexited, id=41894, type=1
2014-12-10 04:21:36:0738, diag_detail_itementered, id=56843, type=1
2014-12-10 04:21:37:0471, diag_detail_itemexited, id=56843, type=1
2014-12-10 04:21:37:0580, diag_detail_itementered, id=27129, type=1
2014-12-10 04:21:39:0265, diag_detail_itemexited, id=27129, type=1
2014-12-10 04:21:39:0296, diag_detail_itementered, id=33438, type=1
2014-12-10 04:21:40:0388, diag_detail_itemexited, id=33438, type=1
2014-12-10 04:21:40:0466, diag_detail_itementered, id=60160, type=1
2014-12-10 04:21:41:0168, diag_detail_itemexited, id=60160, type=1
2014-12-10 04:21:41:0215, diag_detail_itementered, id=43335, type=1
2014-12-10 04:21:41:0246, diag_detail_itemexited, id=43335, type=1
2014-12-10 04:21:41:0558, diag_detail_itementered, id=43335, type=1
2014-12-10 04:21:42:0463, diag_detail_itemexited, id=43335, type=1
2014-12-10 04:21:42:0494, diag_detail_itementered, id=66446, type=1
2014-12-10 04:21:43:0290, diag_detail_itemexited, id=66446, type=1
2014-12-10 04:21:43:0321, diag_detail_itementered, id=59832, type=1
2014-12-10 04:21:44:0320, diag_detail_itemexited, id=59832, type=1
2014-12-10 04:21:44:0398, diag_detail_itementered, id=64454, type=1
2014-12-10 04:21:44:0538, diag_detail_itemexited, id=64454, type=1
2014-12-10 04:21:45:0115, diag_detail_itementered, id=64454, type=1
2014-12-10 04:21:45:0755, diag_detail_itemexited, id=64454, type=1
2014-12-10 04:21:45:0802, diag_detail_itementered, id=45075, type=1
2014-12-10 04:21:45:0849, diag_detail_itemexited, id=45075, type=1
2014-12-10 04:21:46:0379, diag_detail_itementered, id=45075, type=1
2014-12-10 04:21:46:0956, diag_detail_itemexited, id=45075, type=1
2014-12-10 04:21:46:0987, diag_detail_itementered, id=40039, type=1
2014-12-10 04:21:47:0034, diag_detail_itemexited, id=40039, type=1
2014-12-10 04:21:47:0034, diag_detail_itementered, id=25331, type=1
2014-12-10 04:21:47:0190, diag_detail_itemexited, id=25331, type=1
2014-12-10 04:21:47:0315, diag_detail_itementered, id=40039, type=1
2014-12-10 04:21:48:0079, diag_detail_itemexited, id=40039, type=1
2014-12-10 04:21:48:0547, diag_detail_itementered, id=40039, type=1
2014-12-10 04:21:53:0555, diag_detail_itemexited, id=40039, type=1
2014-12-10 04:21:53:0742, diag_detail_itementered, id=40039, type=1
2014-12-10 04:21:59:0608, diag_detail_itemexited, id=40039, type=1
2014-12-10 04:21:59:0655, diag_detail_itementered, id=25331, type=1
2014-12-10 04:22:00:0247, diag_detail_itemexited, id=25331, type=1
2014-12-10 04:22:00:0435, diag_detail_itementered, id=48442, type=1
2014-12-10 04:22:01:0152, diag_detail_itemexited, id=48442, type=1
2014-12-10 04:22:01:0495, diag_detail_itementered, id=47045, type=1
2014-12-10 04:22:02:0104, diag_detail_itemexited, id=47045, type=1
2014-12-10 04:22:02:0307, diag_detail_itementered, id=36832, type=1
2014-12-10 04:22:02:0993, diag_detail_itemexited, id=36832, type=1
2014-12-10 04:22:03:0274, diag_detail_itementered, id=16451, type=1
2014-12-10 04:22:03:0929, diag_detail_itemexited, id=16451, type=1
2014-12-10 04:22:04:0335, diag_detail_itementered, id=11338, type=1
2014-12-10 04:22:05:0286, diag_detail_itemexited, id=11338, type=1
2014-12-10 04:22:05:0411, diag_detail_itementered, id=22720, type=1
2014-12-10 04:22:11:0698, diag_detail_itemexited, id=22720, type=1
2014-12-10 04:22:12:0119, diag_detail_itementered, id=22720, type=1
2014-12-10 04:22:33:0413, diag_detail_itemexited, id=22720, type=1
2014-12-10 04:22:50:0230, setup_loaddata_begin
2014-12-10 04:22:50:0293, setup_loaddata_end
2014-12-10 04:22:50:0293, setup_createactions_begin
2014-12-10 04:22:50:0293, setup_createactions_end
2014-12-10 04:22:55:0987, setup_loaddata_begin
2014-12-10 04:22:56:0049, setup_loaddata_end
2014-12-10 04:22:56:0049, setup_createactions_begin
2014-12-10 04:22:56:0049, setup_createactions_end
2014-12-10 04:23:00:0480, diag_itementered, id=43157, type=1
2014-12-10 04:23:05:0534, diag_itemexited, id=43157, type=1
2014-12-10 04:23:05:0909, diag_itementered, id=62289, type=1
2014-12-10 04:23:26:0126, diag_itemexited, id=62289, type=1
2014-12-10 04:23:26:0236, list_mouseentered, id=36701, type=1
2014-12-10 04:23:26:0236, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0251, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0267, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0282, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0314, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0329, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0360, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0392, list_mousemoved, id=36701, type=1
2014-12-10 04:23:26:0407, list_mouseexited
2014-12-10 04:23:28:0607, search_update, sockets
2014-12-10 04:23:34:0161, diag_detail_itementered, id=0.5576265068826974, type=1
2014-12-10 04:23:34:0192, diag_detail_itemexited, id=0.5576265068826974, type=1
2014-12-10 04:23:34:0207, diag_detail_itementered, id=0.29903919049397354, type=1
2014-12-10 04:23:34:0239, diag_detail_itemexited, id=0.29903919049397354, type=1
2014-12-10 04:23:34:0363, diag_detail_itementered, id=0.425042455002425, type=1
2014-12-10 04:23:34:0395, diag_detail_itemexited, id=0.425042455002425, type=1
2014-12-10 04:23:34:0566, diag_detail_itementered, id=0.2652850104863833, type=4
2014-12-10 04:23:34:0597, diag_detail_itemexited, id=0.2652850104863833, type=4
2014-12-10 04:23:34:0597, diag_detail_itementered, id=62929, type=1
2014-12-10 04:23:35:0284, diag_detail_itemexited, id=62929, type=1
2014-12-10 04:23:35:0346, diag_detail_itementered, id=0.1942403965508981, type=1
2014-12-10 04:23:35:0377, diag_detail_itemexited, id=0.1942403965508981, type=1
2014-12-10 04:23:38:0669, search_update, 
2014-12-10 04:23:45:0876, setup_loaddata_begin
2014-12-10 04:23:46:0469, setup_loaddata_end
2014-12-10 04:23:46:0469, setup_createactions_begin
2014-12-10 04:23:46:0485, setup_createactions_end
2014-12-10 04:23:48:0045, diag_itementered, id=24723, type=1
2014-12-10 04:23:48:0107, diag_itemexited, id=24723, type=1
2014-12-10 04:23:50:0229, setup_loaddata_begin
2014-12-10 04:23:50:0432, setup_loaddata_end
2014-12-10 04:23:50:0432, setup_createactions_begin
2014-12-10 04:23:50:0447, setup_createactions_end
2014-12-10 04:23:53:0208, list_mouseentered, id=11930, type=1
2014-12-10 04:23:53:0208, list_mousemoved, id=11930, type=1
2014-12-10 04:23:53:0240, list_mousemoved, id=11930, type=1
2014-12-10 04:23:53:0255, list_mousemoved, id=11930, type=1
2014-12-10 04:23:53:0271, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0286, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0302, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0318, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0333, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0349, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0364, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0380, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0396, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0411, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0427, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0458, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0474, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0489, list_mousemoved, id=33960, type=1
2014-12-10 04:23:53:0505, list_mouseexited
2014-12-10 04:23:56:0282, search_update, sockets
2014-12-10 04:23:59:0885, list_mouseentered, id=11930, type=1
2014-12-10 04:23:59:0885, list_mousemoved, id=11930, type=1
2014-12-10 04:23:59:0901, list_mousemoved, id=11930, type=1
2014-12-10 04:23:59:0916, list_mousemoved, id=11930, type=1
2014-12-10 04:23:59:0916, list_mousemoved, id=11930, type=1
2014-12-10 04:23:59:0932, list_mousemoved, id=11930, type=1
2014-12-10 04:23:59:0948, list_mousemoved, id=62929, type=1
2014-12-10 04:23:59:0963, list_mousemoved, id=62929, type=1
2014-12-10 04:23:59:0979, list_mouseexited
2014-12-10 04:24:00:0665, diag_itementered, id=62929, type=1
2014-12-10 04:24:05:0454, diag_itemexited, id=62929, type=1
2014-12-10 04:24:05:0813, diag_itementered, id=11930, type=1
2014-12-10 04:24:30:0493, diag_itemexited, id=11930, type=1
2014-12-10 04:24:48:0573, setup_loaddata_begin
2014-12-10 04:24:49:0166, setup_loaddata_end
2014-12-10 04:24:49:0166, setup_createactions_begin
2014-12-10 04:24:49:0182, setup_createactions_end
2014-12-10 04:24:53:0846, setup_loaddata_begin
2014-12-10 04:24:53:0877, setup_loaddata_end
2014-12-10 04:24:53:0877, setup_createactions_begin
2014-12-10 04:24:53:0877, setup_createactions_end
2014-12-10 04:24:54:0189, diag_itemexited, id=2, type=4
2014-12-10 04:24:55:0047, diag_itementered, id=1, type=0
2014-12-10 04:24:55:0079, diag_itemexited, id=1, type=0
2014-12-10 04:24:55:0110, diag_itemexited, id=1, type=4
2014-12-10 04:24:55:0921, diag_itemexited, id=2, type=4
2014-12-10 04:24:55:0921, diag_itementered, id=2, type=0
2014-12-10 04:24:55:0983, diag_itemexited, id=2, type=0
2014-12-10 04:24:59:0759, setup_loaddata_begin
2014-12-10 04:24:59:0774, setup_loaddata_end
2014-12-10 04:24:59:0774, setup_createactions_begin
2014-12-10 04:24:59:0774, setup_createactions_end
2014-12-10 04:25:02:0083, setup_loaddata_begin
2014-12-10 04:25:02:0099, setup_loaddata_end
2014-12-10 04:25:02:0099, setup_createactions_begin
2014-12-10 04:25:02:0099, setup_createactions_end
2014-12-10 04:25:04:0969, setup_loaddata_begin
2014-12-10 04:25:04:0969, setup_loaddata_end
2014-12-10 04:25:04:0985, setup_createactions_begin
2014-12-10 04:25:04:0985, setup_createactions_end
2014-12-10 04:25:05:0687, diag_itemexited, id=1, type=4
2014-12-10 04:25:06:0046, diag_itemexited, id=1, type=4
2014-12-10 04:25:06:0046, diag_itementered, id=1, type=0
2014-12-10 04:25:06:0077, diag_itemexited, id=1, type=0
2014-12-10 04:25:07:0309, diag_itemexited, id=1, type=4
2014-12-10 04:25:07:0309, diag_itementered, id=2, type=0
2014-12-10 04:25:07:0434, diag_itemexited, id=2, type=0
2014-12-10 04:25:07:0528, diag_itemexited, id=2, type=4
2014-12-10 04:25:07:0528, diag_itementered, id=2, type=0
2014-12-10 04:25:07:0574, diag_itemexited, id=2, type=0
2014-12-10 04:25:07:0606, diag_itemexited, id=2, type=4
2014-12-10 04:25:07:0652, diag_itemexited, id=3, type=4
2014-12-10 04:25:09:0618, diag_itemexited, id=3, type=4
2014-12-10 04:25:09:0618, diag_itementered, id=3, type=0
2014-12-10 04:25:09:0696, diag_itemexited, id=3, type=0
2014-12-10 04:25:09:0899, diag_itemexited, id=3, type=4
2014-12-10 04:25:09:0899, diag_itementered, id=4, type=0
2014-12-10 04:25:09:0977, diag_itemexited, id=4, type=0
2014-12-10 04:25:10:0008, diag_itemexited, id=4, type=4
2014-12-10 04:25:15:0312, setup_loaddata_begin
2014-12-10 04:25:15:0905, setup_loaddata_end
2014-12-10 04:25:15:0905, setup_createactions_begin
2014-12-10 04:25:15:0920, setup_createactions_end
2014-12-10 04:25:18:0510, setup_loaddata_begin
2014-12-10 04:25:18:0853, setup_loaddata_end
2014-12-10 04:25:18:0853, setup_createactions_begin
2014-12-10 04:25:18:0869, setup_createactions_end
2014-12-10 04:25:24:0969, setup_loaddata_begin
2014-12-10 04:25:25:0156, setup_loaddata_end
2014-12-10 04:25:25:0156, setup_createactions_begin
2014-12-10 04:25:25:0171, setup_createactions_end
2014-12-10 04:25:29:0898, setup_loaddata_begin
2014-12-10 04:25:29:0976, setup_loaddata_end
2014-12-10 04:25:29:0976, setup_createactions_begin
2014-12-10 04:25:29:0976, setup_createactions_end
2014-12-10 04:25:32:0940, diag_itementered, id=40480, type=1
2014-12-10 04:25:34:0219, diag_itemexited, id=40480, type=1
2014-12-10 04:25:34:0594, diag_itementered, id=62289, type=1
2014-12-10 04:25:34:0641, diag_itemexited, id=62289, type=1
2014-12-10 04:25:34:0953, diag_itementered, id=62289, type=1
2014-12-10 04:25:35:0748, diag_itemexited, id=62289, type=1
2014-12-10 04:25:35:0936, diag_itemexited, id=2, type=4
2014-12-10 04:25:38:0572, diag_itementered, id=40480, type=1
2014-12-10 04:25:45:0717, diag_itemexited, id=40480, type=1
2014-12-10 04:25:45:0982, diag_itementered, id=40480, type=1
2014-12-10 04:26:00:0662, diag_itemexited, id=40480, type=1
2014-12-10 04:26:02:0393, diag_itemexited, id=2, type=4
2014-12-10 04:26:12:0112, diag_itemexited, id=1, type=4
2014-12-10 04:26:12:0144, diag_itementered, id=1, type=0
2014-12-10 04:26:12:0190, diag_itemexited, id=1, type=0
2014-12-10 04:26:12:0440, diag_itemexited, id=1, type=4
2014-12-10 04:26:12:0440, diag_itementered, id=1, type=0
2014-12-10 04:26:12:0518, diag_itemexited, id=1, type=0
2014-12-10 04:26:12:0565, diag_itemexited, id=1, type=4
2014-12-10 04:26:12:0627, diag_itemexited, id=2, type=4
2014-12-10 04:26:12:0643, diag_itementered, id=2, type=0
2014-12-10 04:26:12:0690, diag_itemexited, id=2, type=0
2014-12-10 04:26:12:0736, diag_itemexited, id=2, type=4
2014-12-10 04:26:17:0276, diag_itemexited, id=3, type=4
2014-12-10 04:26:17:0292, diag_itementered, id=3, type=0
2014-12-10 04:26:17:0978, diag_itemexited, id=3, type=0
2014-12-10 04:26:18:0025, diag_itemexited, id=3, type=4
2014-12-10 04:26:18:0087, diag_itemexited, id=2, type=4
2014-12-10 04:26:18:0087, diag_itementered, id=2, type=0
2014-12-10 04:26:23:0298, diag_itemexited, id=2, type=0
2014-12-10 04:26:23:0344, diag_itemexited, id=2, type=4
2014-12-10 04:26:23:0391, diag_itemexited, id=3, type=4
2014-12-10 04:26:32:0393, setup_loaddata_begin
2014-12-10 04:26:33:0282, setup_loaddata_end
2014-12-10 04:26:33:0282, setup_createactions_begin
2014-12-10 04:26:33:0297, setup_createactions_end
2014-12-10 04:26:34:0499, diag_itementered, id=36347, type=1
2014-12-10 04:26:34:0545, diag_itemexited, id=36347, type=1
2014-12-10 04:26:34:0592, diag_itemexited, id=4, type=4
2014-12-10 04:26:34:0592, diag_itementered, id=65035, type=1
2014-12-10 04:26:34:0639, diag_itemexited, id=65035, type=1
2014-12-10 04:26:34:0701, diag_itementered, id=3049, type=1
2014-12-10 04:26:34:0748, diag_itemexited, id=3049, type=1
2014-12-10 04:26:35:0747, diag_itementered, id=24723, type=1
2014-12-10 04:26:35:0778, diag_itemexited, id=24723, type=1
2014-12-10 04:26:38:0945, diag_itemexited, id=2, type=4
2014-12-10 04:26:38:0945, diag_itementered, id=2, type=0
2014-12-10 04:26:40:0692, edge_create, Tuple[0,1,0.838133447729569,1,0.0,1418246266163,1418246266163]
2014-12-10 04:26:40:0692, edge_create, Tuple[1,2,0.9974072176241016,1,0.0,1418246266163,1418246266163]
2014-12-10 04:26:40:0707, edge_create, Tuple[1,3,0.928009841554561,1,0.0,1418246266163,1418246266163]
2014-12-10 04:26:40:0707, edge_create, Tuple[1,4,0.9792783427471351,1,0.0,1418246266163,1418246266163]
2014-12-10 04:26:40:0739, pattern_open, 2
2014-12-10 04:26:40:0739, diag_itemclicked, id=2, type=0
2014-12-10 04:26:41:0534, diag_itemexited, id=2, type=0
2014-12-10 04:26:51:0721, diag_detail_itementered, id=65035, type=1
2014-12-10 04:26:58:0960, diag_detail_itemexited, id=65035, type=1
2014-12-10 04:26:59:0131, diag_detail_itementered, id=65035, type=1
2014-12-10 04:27:00:0878, diag_detail_itemexited, id=65035, type=1
2014-12-10 04:27:02:0298, diag_detail_itementered, id=0.928009841554561, type=1
2014-12-10 04:27:02:0314, diag_detail_itemexited, id=0.928009841554561, type=1
2014-12-10 04:27:02:0579, diag_detail_itementered, id=23106, type=1
2014-12-10 04:27:25:0059, diag_detail_itemexited, id=23106, type=1
2014-12-10 04:27:27:0274, list_mouseentered, type=detailRelatedList, item=65035
2014-12-10 04:27:27:0570, list_mouseexited, type=detailRelatedList
2014-12-10 04:27:31:0268, search_update, regex
2014-12-10 04:28:06:0259, list_mouseentered, id=24723, type=1
2014-12-10 04:28:06:0259, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0274, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0290, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0306, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0306, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0321, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0337, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0352, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0384, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0384, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0399, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0415, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0430, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0446, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0446, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0462, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0477, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0493, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0508, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0524, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0540, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0540, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0555, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0571, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0586, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0602, list_mousemoved, id=24723, type=1
2014-12-10 04:28:06:0602, list_mousemoved, id=22115, type=1
2014-12-10 04:28:06:0633, list_mousemoved, id=22115, type=1
2014-12-10 04:28:06:0649, list_mousemoved, id=22115, type=1
2014-12-10 04:28:06:0664, list_mousemoved, id=22115, type=1
2014-12-10 04:28:06:0680, list_mousemoved, id=22115, type=1
2014-12-10 04:28:06:0696, list_mousemoved, id=22115, type=1
2014-12-10 04:28:06:0727, list_mousemoved, id=22115, type=1
2014-12-10 04:28:07:0366, list_pattern_itemclicked, id=22115, type=1
2014-12-10 04:28:07:0398, edge_create, Tuple[0,1,0.42462327755143814,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 22132
2014-12-10 04:28:07:0398, edge_create, Tuple[1,2,0.3019797363432305,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 22133
2014-12-10 04:28:07:0398, edge_create, Tuple[1,3,0.7008342275031489,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 22142
2014-12-10 04:28:07:0398, edge_create, Tuple[1,4,0.6863863407338218,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 22163
2014-12-10 04:28:07:0398, edge_create, Tuple[1,5,0.8231284306005691,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 245381
2014-12-10 04:28:07:0398, edge_create, Tuple[1,6,0.49579546363002513,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 280105
2014-12-10 04:28:07:0398, edge_create, Tuple[1,7,0.6298989485858302,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 412989
2014-12-10 04:28:07:0398, edge_create, Tuple[1,8,0.8637122297858295,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 1590630
2014-12-10 04:28:07:0398, edge_create, Tuple[1,9,0.3945942092101685,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0398, answer_create, 12151715
2014-12-10 04:28:07:0413, edge_create, Tuple[1,10,0.08280413848332657,4,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0413, edge_create, Tuple[0,11,0.8488785047611278,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0413, edge_create, Tuple[11,12,0.5210413028386565,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0413, edge_create, Tuple[11,13,0.9990976204731905,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0431, edge_create, Tuple[11,14,0.2898741725190629,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0431, edge_create, Tuple[11,15,0.466221240053028,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0446, edge_create, Tuple[11,16,0.07134158191881501,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0446, edge_create, Tuple[11,17,0.2191465346148158,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0462, edge_create, Tuple[11,18,0.8469130914124544,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0462, edge_create, Tuple[11,19,0.7735221996767346,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0478, edge_create, Tuple[11,20,0.33193890539385695,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0478, edge_create, Tuple[11,21,0.6784389875909695,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0493, edge_create, Tuple[11,22,0.16772281370984599,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0493, edge_create, Tuple[11,23,0.4124083594261744,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0509, edge_create, Tuple[11,24,0.960987886557725,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0509, edge_create, Tuple[11,25,0.42461876633328055,1,0.0,1418246266163,1418246266163]
2014-12-10 04:28:07:0524, discussion_open, 22115
2014-12-10 04:28:07:0992, list_mouseexited
2014-12-10 04:28:07:0992, list_mouseentered, type=detailAnswersList
2014-12-10 04:28:39:0895, answer_open, VisualItem[tree.nodes,4,id=22142,type=20,title=,body=<p>Visual Studio Team System does include something like this <a href="http://msdn.microsoft.com/en-us/library/aa833197(VS.80).aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/aa833197(VS.80).aspx</a></p>

<p>Not much help for Java though, so sorry.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=3,searchfield=]
2014-12-10 04:28:39:0895, list_pattern_itemclicked, type=detailAnswersList, item=2968
2014-12-10 04:28:48:0568, list_mouseexited, type=detailAnswersList
2014-12-10 04:28:48:0678, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:28:48:0693, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:28:48:0693, diag_detail_itementered, id=22133, type=21
2014-12-10 04:28:48:0740, diag_detail_itemexited, id=22133, type=21
2014-12-10 04:28:48:0802, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:28:48:0802, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:28:48:0802, diag_detail_itementered, id=22133, type=21
2014-12-10 04:28:48:0849, diag_detail_itemexited, id=22133, type=21
2014-12-10 04:28:52:0827, diag_detail_itementered, id=22115, type=1
2014-12-10 04:28:56:0915, diag_detail_itemexited, id=22115, type=1
2014-12-10 04:28:57:0102, diag_detail_itementered, id=0.8488785047611278, type=1
2014-12-10 04:28:57:0133, diag_detail_itemexited, id=0.8488785047611278, type=1
2014-12-10 04:28:57:0133, diag_detail_itementered, id=0.9990976204731905, type=1
2014-12-10 04:28:57:0164, diag_detail_itemexited, id=0.9990976204731905, type=1
2014-12-10 04:28:57:0164, diag_detail_itementered, id=-1205901012, type=3
2014-12-10 04:28:57:0211, diag_detail_itemexited, id=-1205901012, type=3
2014-12-10 04:28:57:0663, diag_detail_itementered, id=41107, type=1
2014-12-10 04:29:00:0300, diag_detail_itemexited, id=41107, type=1
2014-12-10 04:29:00:0347, diag_detail_itementered, id=-1205901012, type=3
2014-12-10 04:29:00:0378, diag_detail_itemexited, id=-1205901012, type=3
2014-12-10 04:29:00:0549, diag_detail_itementered, id=0.7008342275031489, type=4
2014-12-10 04:29:00:0581, diag_detail_itemexited, id=0.7008342275031489, type=4
2014-12-10 04:29:00:0612, diag_detail_itementered, id=0.6863863407338218, type=4
2014-12-10 04:29:00:0643, diag_detail_itemexited, id=0.6863863407338218, type=4
2014-12-10 04:29:00:0659, diag_detail_itementered, id=0.8231284306005691, type=4
2014-12-10 04:29:00:0752, diag_detail_itemexited, id=0.8231284306005691, type=4
2014-12-10 04:29:00:0893, diag_detail_itementered, id=0.7008342275031489, type=4
2014-12-10 04:29:01:0111, diag_detail_itemexited, id=0.7008342275031489, type=4
2014-12-10 04:29:01:0111, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:29:01:0127, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:29:01:0127, diag_detail_itementered, id=22133, type=21
2014-12-10 04:29:02:0952, diag_detail_itemexited, id=22133, type=21
2014-12-10 04:29:03:0576, answer_open, VisualItem[tree.nodes,2,id=22132,type=20,title=,body=<p>You'll have to write your own parser, like the author of String::Random (Perl) did. In fact, he doesn't use regexes anywhere in that module, it's just what perl-coders are used to.</p>

<p>On the other hand, maybe you can have a look at <a href="http://search.cpan.org/~steve/String-Random-0.20/Random.pm" rel="nofollow">the source</a>, to get some pointers.</p>

<p><hr /></p>

<p>EDIT: Damn, blair beat me to the punch by 15 seconds.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:03:0576, answer_open, VisualItem[tree.nodes,2,id=22132,type=20,title=,body=<p>You'll have to write your own parser, like the author of String::Random (Perl) did. In fact, he doesn't use regexes anywhere in that module, it's just what perl-coders are used to.</p>

<p>On the other hand, maybe you can have a look at <a href="http://search.cpan.org/~steve/String-Random-0.20/Random.pm" rel="nofollow">the source</a>, to get some pointers.</p>

<p><hr /></p>

<p>EDIT: Damn, blair beat me to the punch by 15 seconds.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:03:0576, diag_detail_itementered, id=22132, type=20
2014-12-10 04:29:04:0933, diag_detail_itemexited, id=22132, type=20
2014-12-10 04:29:04:0995, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:29:04:0995, answer_open, VisualItem[tree.nodes,3,id=22133,type=21,title=,body=<p><strong>Edit:</strong> </p>

<p>As mentioned in the comments, there is a library available at Google Code to acheive this:
<a href="http://code.google.com/p/xeger">http://code.google.com/p/xeger</a></p>

<p><strong>Original message:</strong></p>

<p>Firstly, with a complex enough regexp, i beleive this can be impossible. But you should be able to put something together for simple regexps.</p>

<p>If you take a look at the source code of the class java.util.regex.Pattern, you'll see that it uses an internal representation of Node instances. Each of the different pattern components have their own implementation of a Node subclass. These Nodes are organised into a tree.</p>

<p>By producing a visitor that traverses this tree, you should be able to call an overloaded generator method or some kind of Builder that cobbles something together.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=10,searchfield=]
2014-12-10 04:29:04:0995, diag_detail_itementered, id=22133, type=21
2014-12-10 04:29:05:0042, diag_detail_itemexited, id=22133, type=21
2014-12-10 04:29:05:0245, answer_open, VisualItem[tree.nodes,4,id=22142,type=20,title=,body=<p>Visual Studio Team System does include something like this <a href="http://msdn.microsoft.com/en-us/library/aa833197(VS.80).aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/aa833197(VS.80).aspx</a></p>

<p>Not much help for Java though, so sorry.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=3,searchfield=]
2014-12-10 04:29:05:0261, answer_open, VisualItem[tree.nodes,4,id=22142,type=20,title=,body=<p>Visual Studio Team System does include something like this <a href="http://msdn.microsoft.com/en-us/library/aa833197(VS.80).aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/aa833197(VS.80).aspx</a></p>

<p>Not much help for Java though, so sorry.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=3,searchfield=]
2014-12-10 04:29:05:0261, diag_detail_itementered, id=22142, type=20
2014-12-10 04:29:06:0228, diag_detail_itemexited, id=22142, type=20
2014-12-10 04:29:06:0384, answer_open, VisualItem[tree.nodes,5,id=22163,type=20,title=,body=<p>On stackoverflow podcast 11:</p>

<blockquote>
  <p>Spolsky:  Yep.  There's a new product also, if you don't want to use the Team System there our friends at Redgate have a product called SQL Data Generator [<a href="http://www.red-gate.com/products/sql_data_generator/index.htm" rel="nofollow">http://www.red-gate.com/products/sql_data_generator/index.htm</a>].  It's $295, and it just generates some realistic test data.  And it does things like actually generate real cities in the city column that actually exist, and then when it generates those it'll get the state right, instead of getting the state wrong, or putting states into German cities and stuff like... you know, it generates pretty realistic looking data.  I'm not really sure what all the features are.</p>
</blockquote>

<p>This is probably not what you are looking for, but it might be a good starting off point, instead of creating your own.</p>

<p>I can't seem to find anything in google, so I would suggest tackling the problem by parsing a given regular expression into the smallest units of work (\w, [x-x], \d, etc) and writing some basic methods to support those regular expression phrases.</p>

<p>So for \w you would have a method getRandomLetter() which returns any random letter, and you would also have getRandomLetter(char startLetter, char endLetter) which gives you a random letter between the two values.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=3,searchfield=]
2014-12-10 04:29:06:0384, answer_open, VisualItem[tree.nodes,5,id=22163,type=20,title=,body=<p>On stackoverflow podcast 11:</p>

<blockquote>
  <p>Spolsky:  Yep.  There's a new product also, if you don't want to use the Team System there our friends at Redgate have a product called SQL Data Generator [<a href="http://www.red-gate.com/products/sql_data_generator/index.htm" rel="nofollow">http://www.red-gate.com/products/sql_data_generator/index.htm</a>].  It's $295, and it just generates some realistic test data.  And it does things like actually generate real cities in the city column that actually exist, and then when it generates those it'll get the state right, instead of getting the state wrong, or putting states into German cities and stuff like... you know, it generates pretty realistic looking data.  I'm not really sure what all the features are.</p>
</blockquote>

<p>This is probably not what you are looking for, but it might be a good starting off point, instead of creating your own.</p>

<p>I can't seem to find anything in google, so I would suggest tackling the problem by parsing a given regular expression into the smallest units of work (\w, [x-x], \d, etc) and writing some basic methods to support those regular expression phrases.</p>

<p>So for \w you would have a method getRandomLetter() which returns any random letter, and you would also have getRandomLetter(char startLetter, char endLetter) which gives you a random letter between the two values.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=3,searchfield=]
2014-12-10 04:29:06:0384, diag_detail_itementered, id=22163, type=20
2014-12-10 04:29:06:0462, diag_detail_itemexited, id=22163, type=20
2014-12-10 04:29:06:0727, answer_open, VisualItem[tree.nodes,5,id=22163,type=20,title=,body=<p>On stackoverflow podcast 11:</p>

<blockquote>
  <p>Spolsky:  Yep.  There's a new product also, if you don't want to use the Team System there our friends at Redgate have a product called SQL Data Generator [<a href="http://www.red-gate.com/products/sql_data_generator/index.htm" rel="nofollow">http://www.red-gate.com/products/sql_data_generator/index.htm</a>].  It's $295, and it just generates some realistic test data.  And it does things like actually generate real cities in the city column that actually exist, and then when it generates those it'll get the state right, instead of getting the state wrong, or putting states into German cities and stuff like... you know, it generates pretty realistic looking data.  I'm not really sure what all the features are.</p>
</blockquote>

<p>This is probably not what you are looking for, but it might be a good starting off point, instead of creating your own.</p>

<p>I can't seem to find anything in google, so I would suggest tackling the problem by parsing a given regular expression into the smallest units of work (\w, [x-x], \d, etc) and writing some basic methods to support those regular expression phrases.</p>

<p>So for \w you would have a method getRandomLetter() which returns any random letter, and you would also have getRandomLetter(char startLetter, char endLetter) which gives you a random letter between the two values.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=3,searchfield=]
2014-12-10 04:29:06:0727, answer_open, VisualItem[tree.nodes,5,id=22163,type=20,title=,body=<p>On stackoverflow podcast 11:</p>

<blockquote>
  <p>Spolsky:  Yep.  There's a new product also, if you don't want to use the Team System there our friends at Redgate have a product called SQL Data Generator [<a href="http://www.red-gate.com/products/sql_data_generator/index.htm" rel="nofollow">http://www.red-gate.com/products/sql_data_generator/index.htm</a>].  It's $295, and it just generates some realistic test data.  And it does things like actually generate real cities in the city column that actually exist, and then when it generates those it'll get the state right, instead of getting the state wrong, or putting states into German cities and stuff like... you know, it generates pretty realistic looking data.  I'm not really sure what all the features are.</p>
</blockquote>

<p>This is probably not what you are looking for, but it might be a good starting off point, instead of creating your own.</p>

<p>I can't seem to find anything in google, so I would suggest tackling the problem by parsing a given regular expression into the smallest units of work (\w, [x-x], \d, etc) and writing some basic methods to support those regular expression phrases.</p>

<p>So for \w you would have a method getRandomLetter() which returns any random letter, and you would also have getRandomLetter(char startLetter, char endLetter) which gives you a random letter between the two values.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=3,searchfield=]
2014-12-10 04:29:06:0727, diag_detail_itementered, id=22163, type=20
2014-12-10 04:29:07:0491, diag_detail_itemexited, id=22163, type=20
2014-12-10 04:29:08:0006, answer_open, VisualItem[tree.nodes,6,id=245381,type=20,title=,body=<p>I know there's already an accepted answer, but I've been using <strong>RedGate's Data Generator</strong> (the one mentioned in Craig's answer) and it works REALLY well for everything I've thrown at it. It's quick and that leaves me wanting to use the same regex to generate the real data for things like registration codes that this thing spits out.</p>

<p>It takes a regex like:</p>

<pre><code>[A-Z0-9]{3,3}-[A-Z0-9]{3,3}
</code></pre>

<p>and it generates tons of unique codes like:</p>

<pre><code>LLK-32U
</code></pre>

<p>Is this some big secret algorithm that RedGate figured out and we're all out of luck or is it something that us mere mortals actually could do?</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:08:0006, answer_open, VisualItem[tree.nodes,6,id=245381,type=20,title=,body=<p>I know there's already an accepted answer, but I've been using <strong>RedGate's Data Generator</strong> (the one mentioned in Craig's answer) and it works REALLY well for everything I've thrown at it. It's quick and that leaves me wanting to use the same regex to generate the real data for things like registration codes that this thing spits out.</p>

<p>It takes a regex like:</p>

<pre><code>[A-Z0-9]{3,3}-[A-Z0-9]{3,3}
</code></pre>

<p>and it generates tons of unique codes like:</p>

<pre><code>LLK-32U
</code></pre>

<p>Is this some big secret algorithm that RedGate figured out and we're all out of luck or is it something that us mere mortals actually could do?</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:08:0022, diag_detail_itementered, id=245381, type=20
2014-12-10 04:29:09:0239, diag_detail_itemexited, id=245381, type=20
2014-12-10 04:29:09:0504, answer_open, VisualItem[tree.nodes,7,id=280105,type=20,title=,body=<p>It's far from supporting a full PCRE regexp, but I wrote the following Ruby method to take a regexp-like string and produce a variation on it. (For language-based CAPTCHA.)</p>

<pre><code># q = "(How (much|many)|What) is (the (value|result) of)? :num1 :op :num2?"
# values = { :num1=>42, :op=>"plus", :num2=>17 }
# 4.times{ puts q.variation( values ) }
# => What is 42 plus 17?
# => How many is the result of 42 plus 17?
# => What is the result of 42 plus 17?
# => How much is the value of 42 plus 17?
class String
  def variation( values={} )
    out = self.dup
    while out.gsub!( /\(([^())?]+)\)(\?)?/ ){
      ( $2 && ( rand > 0.5 ) ) ? '' : $1.split( '|' ).random
    }; end
    out.gsub!( /:(#{values.keys.join('|')})\b/ ){ values[$1.intern] }
    out.gsub!( /\s{2,}/, ' ' )
    out
  end
end

class Array
  def random
    self[ rand( self.length ) ]
  end
end</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:09:0520, answer_open, VisualItem[tree.nodes,7,id=280105,type=20,title=,body=<p>It's far from supporting a full PCRE regexp, but I wrote the following Ruby method to take a regexp-like string and produce a variation on it. (For language-based CAPTCHA.)</p>

<pre><code># q = "(How (much|many)|What) is (the (value|result) of)? :num1 :op :num2?"
# values = { :num1=>42, :op=>"plus", :num2=>17 }
# 4.times{ puts q.variation( values ) }
# => What is 42 plus 17?
# => How many is the result of 42 plus 17?
# => What is the result of 42 plus 17?
# => How much is the value of 42 plus 17?
class String
  def variation( values={} )
    out = self.dup
    while out.gsub!( /\(([^())?]+)\)(\?)?/ ){
      ( $2 && ( rand > 0.5 ) ) ? '' : $1.split( '|' ).random
    }; end
    out.gsub!( /:(#{values.keys.join('|')})\b/ ){ values[$1.intern] }
    out.gsub!( /\s{2,}/, ' ' )
    out
  end
end

class Array
  def random
    self[ rand( self.length ) ]
  end
end</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:09:0520, diag_detail_itementered, id=280105, type=20
2014-12-10 04:29:10:0144, diag_detail_itemexited, id=280105, type=20
2014-12-10 04:29:10:0253, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:10:0268, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:10:0268, diag_detail_itementered, id=412989, type=20
2014-12-10 04:29:10:0315, diag_detail_itemexited, id=412989, type=20
2014-12-10 04:29:10:0690, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:10:0690, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:10:0690, diag_detail_itementered, id=412989, type=20
2014-12-10 04:29:11:0345, diag_detail_itemexited, id=412989, type=20
2014-12-10 04:29:11:0392, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:11:0392, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:11:0392, diag_detail_itementered, id=412989, type=20
2014-12-10 04:29:11:0719, diag_detail_itemexited, id=412989, type=20
2014-12-10 04:29:11:0984, answer_open, VisualItem[tree.nodes,9,id=1590630,type=20,title=,body=<p><a href="http://code.google.com/p/xeger">Xeger (Java)</a> is capable of doing it as well:</p>

<pre><code>String regex = "[ab]{4,6}c";
Xeger generator = new Xeger(regex);
String result = generator.generate();
assert result.matches(regex);
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=7,searchfield=]
2014-12-10 04:29:11:0984, answer_open, VisualItem[tree.nodes,9,id=1590630,type=20,title=,body=<p><a href="http://code.google.com/p/xeger">Xeger (Java)</a> is capable of doing it as well:</p>

<pre><code>String regex = "[ab]{4,6}c";
Xeger generator = new Xeger(regex);
String result = generator.generate();
assert result.matches(regex);
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=7,searchfield=]
2014-12-10 04:29:12:0000, diag_detail_itementered, id=1590630, type=20
2014-12-10 04:29:12:0296, diag_detail_itemexited, id=1590630, type=20
2014-12-10 04:29:12:0686, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:12:0686, answer_open, VisualItem[tree.nodes,8,id=412989,type=20,title=,body=<p>I've gone the root of rolling my <a href="http://code.google.com/p/rxrdg/" rel="nofollow">own</a> :) </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:29:12:0686, diag_detail_itementered, id=412989, type=20
2014-12-10 04:29:13:0264, diag_detail_itemexited, id=412989, type=20
2014-12-10 04:29:13:0466, answer_open, VisualItem[tree.nodes,9,id=1590630,type=20,title=,body=<p><a href="http://code.google.com/p/xeger">Xeger (Java)</a> is capable of doing it as well:</p>

<pre><code>String regex = "[ab]{4,6}c";
Xeger generator = new Xeger(regex);
String result = generator.generate();
assert result.matches(regex);
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=7,searchfield=]
2014-12-10 04:29:13:0466, answer_open, VisualItem[tree.nodes,9,id=1590630,type=20,title=,body=<p><a href="http://code.google.com/p/xeger">Xeger (Java)</a> is capable of doing it as well:</p>

<pre><code>String regex = "[ab]{4,6}c";
Xeger generator = new Xeger(regex);
String result = generator.generate();
assert result.matches(regex);
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=7,searchfield=]
2014-12-10 04:29:13:0466, diag_detail_itementered, id=1590630, type=20
2014-12-10 04:29:13:0654, diag_detail_itemexited, id=1590630, type=20
2014-12-10 04:29:14:0012, answer_open, VisualItem[tree.nodes,9,id=1590630,type=20,title=,body=<p><a href="http://code.google.com/p/xeger">Xeger (Java)</a> is capable of doing it as well:</p>

<pre><code>String regex = "[ab]{4,6}c";
Xeger generator = new Xeger(regex);
String result = generator.generate();
assert result.matches(regex);
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=7,searchfield=]
2014-12-10 04:29:14:0028, answer_open, VisualItem[tree.nodes,9,id=1590630,type=20,title=,body=<p><a href="http://code.google.com/p/xeger">Xeger (Java)</a> is capable of doing it as well:</p>

<pre><code>String regex = "[ab]{4,6}c";
Xeger generator = new Xeger(regex);
String result = generator.generate();
assert result.matches(regex);
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=7,searchfield=]
2014-12-10 04:29:14:0028, diag_detail_itementered, id=1590630, type=20
2014-12-10 04:29:14:0106, diag_detail_itemexited, id=1590630, type=20
2014-12-10 04:29:14:0184, answer_open, VisualItem[tree.nodes,10,id=12151715,type=20,title=,body=<p>I am on flight and just saw the question: I have written easiest but inefficient and incomplete solution. I hope it may help you to start writing your own parser:</p>

<pre><code>public static void main(String[] args) {

    String line = "[A-Z0-9]{16}";
    String[] tokens = line.split(line);
    char[] pattern = new char[100];
    int i = 0;
    int len = tokens.length;
    String sep1 = "[{";
    StringTokenizer st = new StringTokenizer(line, sep1);

    while (st.hasMoreTokens()) {
        String token = st.nextToken();
        System.out.println(token);

        if (token.contains("]")) {
            char[] endStr = null;

            if (!token.endsWith("]")) {
                String[] subTokens = token.split("]");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            if (token.startsWith("^")) {
                String subStr = token.substring(1, token.length() - 1);
                char[] subChar = subStr.toCharArray();
                Set set = new HashSet&lt;Character&gt;();

                for (int p = 0; p &lt; subChar.length; p++) {
                    set.add(subChar[p]);
                }

                int asci = 1;

                while (true) {
                    char newChar = (char) (subChar[0] + (asci++));

                    if (!set.contains(newChar)) {
                        pattern[i++] = newChar;
                        break;
                    }
                }
                if (endStr != null) {
                    for (int r = 0; r &lt; endStr.length; r++) {
                        pattern[i++] = endStr[r];
                    }
                }

            } else {
                pattern[i++] = token.charAt(0);
            }
        } else if (token.contains("}")) {
            char[] endStr = null;

            if (!token.endsWith("}")) {
                String[] subTokens = token.split("}");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            int length = Integer.parseInt((new StringTokenizer(token, (",}"))).nextToken());
            char element = pattern[i - 1];

            for (int j = 0; j &lt; length - 1; j++) {
                pattern[i++] = element;
            }

            if (endStr != null) {
                for (int r = 0; r &lt; endStr.length; r++) {
                    pattern[i++] = endStr[r];
                }
            }
        } else {
            char[] temp = token.toCharArray();

            for (int q = 0; q &lt; temp.length; q++) {
                pattern[i++] = temp[q];
            }
        }
    }

    String result = "";

    for (int j = 0; j &lt; i; j++) {
        result += pattern[j];
    }

    System.out.print(result);
}
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:14:0184, answer_open, VisualItem[tree.nodes,10,id=12151715,type=20,title=,body=<p>I am on flight and just saw the question: I have written easiest but inefficient and incomplete solution. I hope it may help you to start writing your own parser:</p>

<pre><code>public static void main(String[] args) {

    String line = "[A-Z0-9]{16}";
    String[] tokens = line.split(line);
    char[] pattern = new char[100];
    int i = 0;
    int len = tokens.length;
    String sep1 = "[{";
    StringTokenizer st = new StringTokenizer(line, sep1);

    while (st.hasMoreTokens()) {
        String token = st.nextToken();
        System.out.println(token);

        if (token.contains("]")) {
            char[] endStr = null;

            if (!token.endsWith("]")) {
                String[] subTokens = token.split("]");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            if (token.startsWith("^")) {
                String subStr = token.substring(1, token.length() - 1);
                char[] subChar = subStr.toCharArray();
                Set set = new HashSet&lt;Character&gt;();

                for (int p = 0; p &lt; subChar.length; p++) {
                    set.add(subChar[p]);
                }

                int asci = 1;

                while (true) {
                    char newChar = (char) (subChar[0] + (asci++));

                    if (!set.contains(newChar)) {
                        pattern[i++] = newChar;
                        break;
                    }
                }
                if (endStr != null) {
                    for (int r = 0; r &lt; endStr.length; r++) {
                        pattern[i++] = endStr[r];
                    }
                }

            } else {
                pattern[i++] = token.charAt(0);
            }
        } else if (token.contains("}")) {
            char[] endStr = null;

            if (!token.endsWith("}")) {
                String[] subTokens = token.split("}");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            int length = Integer.parseInt((new StringTokenizer(token, (",}"))).nextToken());
            char element = pattern[i - 1];

            for (int j = 0; j &lt; length - 1; j++) {
                pattern[i++] = element;
            }

            if (endStr != null) {
                for (int r = 0; r &lt; endStr.length; r++) {
                    pattern[i++] = endStr[r];
                }
            }
        } else {
            char[] temp = token.toCharArray();

            for (int q = 0; q &lt; temp.length; q++) {
                pattern[i++] = temp[q];
            }
        }
    }

    String result = "";

    for (int j = 0; j &lt; i; j++) {
        result += pattern[j];
    }

    System.out.print(result);
}
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:14:0200, diag_detail_itementered, id=12151715, type=20
2014-12-10 04:29:14:0278, diag_detail_itemexited, id=12151715, type=20
2014-12-10 04:29:14:0995, answer_open, VisualItem[tree.nodes,10,id=12151715,type=20,title=,body=<p>I am on flight and just saw the question: I have written easiest but inefficient and incomplete solution. I hope it may help you to start writing your own parser:</p>

<pre><code>public static void main(String[] args) {

    String line = "[A-Z0-9]{16}";
    String[] tokens = line.split(line);
    char[] pattern = new char[100];
    int i = 0;
    int len = tokens.length;
    String sep1 = "[{";
    StringTokenizer st = new StringTokenizer(line, sep1);

    while (st.hasMoreTokens()) {
        String token = st.nextToken();
        System.out.println(token);

        if (token.contains("]")) {
            char[] endStr = null;

            if (!token.endsWith("]")) {
                String[] subTokens = token.split("]");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            if (token.startsWith("^")) {
                String subStr = token.substring(1, token.length() - 1);
                char[] subChar = subStr.toCharArray();
                Set set = new HashSet&lt;Character&gt;();

                for (int p = 0; p &lt; subChar.length; p++) {
                    set.add(subChar[p]);
                }

                int asci = 1;

                while (true) {
                    char newChar = (char) (subChar[0] + (asci++));

                    if (!set.contains(newChar)) {
                        pattern[i++] = newChar;
                        break;
                    }
                }
                if (endStr != null) {
                    for (int r = 0; r &lt; endStr.length; r++) {
                        pattern[i++] = endStr[r];
                    }
                }

            } else {
                pattern[i++] = token.charAt(0);
            }
        } else if (token.contains("}")) {
            char[] endStr = null;

            if (!token.endsWith("}")) {
                String[] subTokens = token.split("}");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            int length = Integer.parseInt((new StringTokenizer(token, (",}"))).nextToken());
            char element = pattern[i - 1];

            for (int j = 0; j &lt; length - 1; j++) {
                pattern[i++] = element;
            }

            if (endStr != null) {
                for (int r = 0; r &lt; endStr.length; r++) {
                    pattern[i++] = endStr[r];
                }
            }
        } else {
            char[] temp = token.toCharArray();

            for (int q = 0; q &lt; temp.length; q++) {
                pattern[i++] = temp[q];
            }
        }
    }

    String result = "";

    for (int j = 0; j &lt; i; j++) {
        result += pattern[j];
    }

    System.out.print(result);
}
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:15:0011, answer_open, VisualItem[tree.nodes,10,id=12151715,type=20,title=,body=<p>I am on flight and just saw the question: I have written easiest but inefficient and incomplete solution. I hope it may help you to start writing your own parser:</p>

<pre><code>public static void main(String[] args) {

    String line = "[A-Z0-9]{16}";
    String[] tokens = line.split(line);
    char[] pattern = new char[100];
    int i = 0;
    int len = tokens.length;
    String sep1 = "[{";
    StringTokenizer st = new StringTokenizer(line, sep1);

    while (st.hasMoreTokens()) {
        String token = st.nextToken();
        System.out.println(token);

        if (token.contains("]")) {
            char[] endStr = null;

            if (!token.endsWith("]")) {
                String[] subTokens = token.split("]");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            if (token.startsWith("^")) {
                String subStr = token.substring(1, token.length() - 1);
                char[] subChar = subStr.toCharArray();
                Set set = new HashSet&lt;Character&gt;();

                for (int p = 0; p &lt; subChar.length; p++) {
                    set.add(subChar[p]);
                }

                int asci = 1;

                while (true) {
                    char newChar = (char) (subChar[0] + (asci++));

                    if (!set.contains(newChar)) {
                        pattern[i++] = newChar;
                        break;
                    }
                }
                if (endStr != null) {
                    for (int r = 0; r &lt; endStr.length; r++) {
                        pattern[i++] = endStr[r];
                    }
                }

            } else {
                pattern[i++] = token.charAt(0);
            }
        } else if (token.contains("}")) {
            char[] endStr = null;

            if (!token.endsWith("}")) {
                String[] subTokens = token.split("}");
                token = subTokens[0];

                if (!subTokens[1].equalsIgnoreCase("*")) {
                    endStr = subTokens[1].toCharArray();
                }
            }

            int length = Integer.parseInt((new StringTokenizer(token, (",}"))).nextToken());
            char element = pattern[i - 1];

            for (int j = 0; j &lt; length - 1; j++) {
                pattern[i++] = element;
            }

            if (endStr != null) {
                for (int r = 0; r &lt; endStr.length; r++) {
                    pattern[i++] = endStr[r];
                }
            }
        } else {
            char[] temp = token.toCharArray();

            for (int q = 0; q &lt; temp.length; q++) {
                pattern[i++] = temp[q];
            }
        }
    }

    String result = "";

    for (int j = 0; j &lt; i; j++) {
        result += pattern[j];
    }

    System.out.print(result);
}
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:29:15:0011, diag_detail_itementered, id=12151715, type=20
2014-12-10 04:29:15:0089, diag_detail_itemexited, id=12151715, type=20
2014-12-10 04:29:32:0233, list_mouseentered, type=detailAnswersList
2014-12-10 04:29:32:0483, list_mouseexited, type=detailAnswersList
2014-12-10 04:29:37:0444, edge_create, Tuple[167,500,0.08103438562767362,2,1.0,1418075694546,1418075694546]
2014-12-10 04:29:37:0927, pattern_change_open
2014-12-10 04:29:37:0927, list_mouseentered, type=detailAnswersList
2014-12-10 04:29:37:0959, edge_create, Tuple[0,1,0.7697419206623484,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0959, answer_create, 22132
2014-12-10 04:29:37:0959, edge_create, Tuple[1,2,0.3619843375778695,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0959, answer_create, 22133
2014-12-10 04:29:37:0959, edge_create, Tuple[1,3,0.6424151558655059,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0959, answer_create, 22142
2014-12-10 04:29:37:0959, edge_create, Tuple[1,4,0.035580985742299176,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0959, answer_create, 22163
2014-12-10 04:29:37:0959, edge_create, Tuple[1,5,0.6844243762939398,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0959, answer_create, 245381
2014-12-10 04:29:37:0959, edge_create, Tuple[1,6,0.004103595378367797,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0959, answer_create, 280105
2014-12-10 04:29:37:0959, edge_create, Tuple[1,7,0.542656507902268,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0959, answer_create, 412989
2014-12-10 04:29:37:0974, edge_create, Tuple[1,8,0.008731596416083454,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0974, answer_create, 1590630
2014-12-10 04:29:37:0974, edge_create, Tuple[1,9,0.14381044167344437,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0974, answer_create, 12151715
2014-12-10 04:29:37:0974, edge_create, Tuple[1,10,0.05243809423932855,4,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0974, edge_create, Tuple[0,11,0.1329985889673464,2,1.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0974, pattern_create, 1
2014-12-10 04:29:37:0974, edge_create, Tuple[11,12,0.1851223634309973,2,1.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0974, edge_create, Tuple[0,13,0.023716962663217322,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0974, edge_create, Tuple[13,14,0.1797468613850144,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0990, edge_create, Tuple[13,15,0.7178105405181744,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0992, edge_create, Tuple[13,16,0.8398863497568684,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:37:0992, edge_create, Tuple[13,17,0.08323960271532327,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0007, edge_create, Tuple[13,18,0.44011850234403194,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0007, edge_create, Tuple[13,19,0.39751212471020003,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0023, edge_create, Tuple[13,20,0.7604966088819721,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0023, edge_create, Tuple[13,21,0.3640655973550131,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0039, edge_create, Tuple[13,22,0.12498834804570391,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0039, edge_create, Tuple[13,23,0.5417588218197524,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0054, edge_create, Tuple[13,24,0.9719015871268548,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0054, edge_create, Tuple[13,25,0.8636979179538256,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0070, edge_create, Tuple[13,26,0.5932394723452982,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0070, edge_create, Tuple[13,27,0.19622116296755243,1,0.0,1418246266163,1418246266163]
2014-12-10 04:29:38:0085, discussion_open, 22115
2014-12-10 04:29:38:0101, setup_loaddata_begin
2014-12-10 04:29:38:0959, setup_loaddata_end
2014-12-10 04:29:38:0959, setup_createactions_begin
2014-12-10 04:29:38:0975, setup_createactions_end
2014-12-10 04:29:39:0349, list_mouseentered, type=detailAnswersList
2014-12-10 04:29:39:0396, list_mouseexited, type=detailAnswersList
2014-12-10 04:30:27:0382, list_mouseentered, type=detailAnswersList
2014-12-10 04:30:28:0068, list_mouseexited, type=detailAnswersList
2014-12-10 04:30:29:0691, list_mouseentered, id=24723, type=1
2014-12-10 04:30:29:0706, list_mousemoved, id=24723, type=1
2014-12-10 04:30:29:0722, list_mousemoved, id=24723, type=1
2014-12-10 04:30:29:0738, list_mousemoved, id=24723, type=1
2014-12-10 04:30:29:0738, list_mousemoved, id=24723, type=1
2014-12-10 04:30:29:0769, list_mousemoved, id=24723, type=1
2014-12-10 04:30:29:0784, list_mouseexited
2014-12-10 04:30:38:0084, search_update, welcome page struts
2014-12-10 04:30:40:0081, list_mouseexited
2014-12-10 04:30:43:0185, setup_loaddata_begin
2014-12-10 04:30:44:0885, setup_loaddata_end
2014-12-10 04:30:44:0885, setup_createactions_begin
2014-12-10 04:30:44:0917, setup_createactions_end
2014-12-10 04:30:46:0399, diag_itementered, id=42102, type=1
2014-12-10 04:30:46:0570, diag_itemexited, id=42102, type=1
2014-12-10 04:30:46:0867, diag_itemexited, id=4, type=4
2014-12-10 04:30:46:0867, diag_itementered, id=31693, type=1
2014-12-10 04:30:46:0945, diag_itemexited, id=31693, type=1
2014-12-10 04:30:47:0023, diag_itementered, id=40663, type=1
2014-12-10 04:30:47:0085, diag_itemexited, id=40663, type=1
2014-12-10 04:30:47:0147, diag_itementered, id=54017, type=1
2014-12-10 04:30:47:0210, diag_itemexited, id=54017, type=1
2014-12-10 04:30:47:0787, list_mouseentered, id=47605, type=1
2014-12-10 04:30:47:0787, list_mousemoved, id=47605, type=1
2014-12-10 04:30:47:0834, list_mousemoved, id=47605, type=1
2014-12-10 04:30:47:0927, list_mousemoved, id=47605, type=1
2014-12-10 04:30:47:0943, list_mousemoved, id=47605, type=1
2014-12-10 04:30:47:0959, list_mousemoved, id=47605, type=1
2014-12-10 04:30:47:0990, list_mousemoved, id=47605, type=1
2014-12-10 04:30:48:0005, list_mousemoved, id=47605, type=1
2014-12-10 04:30:48:0005, list_mousemoved, id=13751, type=1
2014-12-10 04:30:48:0052, list_mousemoved, id=13751, type=1
2014-12-10 04:30:48:0068, list_mousemoved, id=13751, type=1
2014-12-10 04:30:48:0099, list_mouseexited
2014-12-10 04:30:52:0779, search_update, welcome page struts
2014-12-10 04:30:54:0636, list_mouseentered, id=23853, type=1
2014-12-10 04:30:54:0636, list_mousemoved, id=23853, type=1
2014-12-10 04:30:54:0651, list_mousemoved, id=23853, type=1
2014-12-10 04:30:54:0667, list_mousemoved, id=23853, type=1
2014-12-10 04:30:54:0682, list_mousemoved, id=23853, type=1
2014-12-10 04:30:54:0698, list_mousemoved, id=23853, type=1
2014-12-10 04:30:54:0714, list_mousemoved, id=23853, type=1
2014-12-10 04:30:54:0714, list_mousemoved, id=23853, type=1
2014-12-10 04:30:54:0745, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0760, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0776, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0792, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0807, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0823, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0838, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0838, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0854, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0870, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0885, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0901, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0916, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0932, list_mousemoved, id=39399, type=1
2014-12-10 04:30:54:0994, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0010, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0026, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0041, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0057, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0072, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0072, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0088, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0104, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0119, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0135, list_mousemoved, id=39399, type=1
2014-12-10 04:30:55:0150, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0317, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0333, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0333, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0348, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0364, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0380, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0395, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0707, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0754, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0785, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0785, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0816, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0832, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0832, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0848, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0863, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0879, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0894, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0910, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0910, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0941, list_mousemoved, id=39399, type=1
2014-12-10 04:30:58:0988, list_mousemoved, id=39399, type=1
2014-12-10 04:30:59:0050, list_mousemoved, id=39399, type=1
2014-12-10 04:30:59:0066, list_mousemoved, id=39399, type=1
2014-12-10 04:30:59:0082, list_mousemoved, id=39399, type=1
2014-12-10 04:30:59:0097, list_mousemoved, id=39399, type=1
2014-12-10 04:30:59:0113, list_mousemoved, id=39399, type=1
2014-12-10 04:30:59:0175, list_mousemoved, id=39399, type=1
2014-12-10 04:31:02:0202, list_pattern_itemclicked, id=39399, type=1
2014-12-10 04:31:02:0233, edge_create, Tuple[0,1,0.9021806786557092,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0233, answer_create, 14811399
2014-12-10 04:31:02:0233, edge_create, Tuple[1,2,0.3880194356601492,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0233, answer_create, 15551450
2014-12-10 04:31:02:0233, edge_create, Tuple[1,3,0.4473666539970751,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0233, answer_create, 15905476
2014-12-10 04:31:02:0233, edge_create, Tuple[1,4,0.9620395316685814,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0233, answer_create, 16113198
2014-12-10 04:31:02:0233, edge_create, Tuple[1,5,0.6308868641635312,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0233, answer_create, 16638674
2014-12-10 04:31:02:0248, edge_create, Tuple[1,6,0.8339094538380654,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 40745
2014-12-10 04:31:02:0248, edge_create, Tuple[1,7,0.929597627056522,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 43879
2014-12-10 04:31:02:0248, edge_create, Tuple[1,8,0.17794672405400858,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 39599
2014-12-10 04:31:02:0248, edge_create, Tuple[1,9,0.6640114392901306,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 42614
2014-12-10 04:31:02:0248, edge_create, Tuple[1,10,0.0331222161185829,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 318846
2014-12-10 04:31:02:0248, edge_create, Tuple[1,11,0.5850684697721492,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 2166139
2014-12-10 04:31:02:0248, edge_create, Tuple[1,12,0.03917404908539723,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 4842983
2014-12-10 04:31:02:0248, edge_create, Tuple[1,13,0.5922679050745058,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, answer_create, 1775500
2014-12-10 04:31:02:0248, edge_create, Tuple[1,14,0.5907373808428764,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, edge_create, Tuple[0,15,0.5581140914236504,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0248, edge_create, Tuple[15,16,0.16414837193740617,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0266, edge_create, Tuple[15,17,0.9224043804023284,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0266, edge_create, Tuple[15,18,0.6157730366440703,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0282, edge_create, Tuple[15,19,0.49494391367125246,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0282, edge_create, Tuple[15,20,0.782271867949224,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0297, edge_create, Tuple[15,21,0.509982627715734,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0297, edge_create, Tuple[15,22,0.2643612195047327,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0313, edge_create, Tuple[15,23,0.793819353464176,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0313, edge_create, Tuple[15,24,0.6442283266253197,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0328, edge_create, Tuple[15,25,0.21302103663416116,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0328, edge_create, Tuple[15,26,0.8862721869673971,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0344, edge_create, Tuple[15,27,0.7796020337429254,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0344, edge_create, Tuple[15,28,0.3803798325444905,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0360, edge_create, Tuple[15,29,0.7069624084389307,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0391, edge_create, Tuple[15,30,0.1012338300320953,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0391, edge_create, Tuple[15,31,0.7826836168906913,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0406, edge_create, Tuple[15,32,0.036532766317095455,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0406, edge_create, Tuple[15,33,0.988340395949485,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0422, edge_create, Tuple[15,34,0.2574695268515491,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0422, edge_create, Tuple[15,35,0.8298476475687886,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0438, edge_create, Tuple[15,36,0.40795291127435784,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0438, edge_create, Tuple[15,37,0.21268296851474333,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0453, edge_create, Tuple[15,38,0.6321040870943706,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0453, edge_create, Tuple[15,39,0.41340211211254696,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0469, edge_create, Tuple[15,40,0.9653616300998458,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0469, edge_create, Tuple[15,41,0.16160542801370414,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:02:0484, discussion_open, 39399
2014-12-10 04:31:03:0108, list_mouseexited
2014-12-10 04:31:03:0124, list_mouseentered, type=detailAnswersList
2014-12-10 04:31:03:0233, list_mouseexited, type=detailAnswersList
2014-12-10 04:31:03:0623, diag_detail_itementered, id=0.3880194356601492, type=4
2014-12-10 04:31:03:0654, diag_detail_itemexited, id=0.3880194356601492, type=4
2014-12-10 04:31:03:0935, diag_detail_itementered, id=39399, type=1
2014-12-10 04:31:03:0966, diag_detail_itemexited, id=39399, type=1
2014-12-10 04:31:04:0247, diag_detail_itementered, id=39399, type=1
2014-12-10 04:31:06:0462, diag_detail_itemexited, id=39399, type=1
2014-12-10 04:31:13:0483, answer_open, VisualItem[tree.nodes,5,id=16113198,type=20,title=,body=<p>This worked fine for me, too:</p>

<pre><code>&lt;welcome-file-list&gt;
&lt;welcome-file&gt;MyAction.action&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>

<p>I was not able to get the default action to execute when the user enters the webapp using the root of the web app (mywebapp/).  There is a bug in struts 2.3.12 that won't go to the default action or use the welcome page when you use the root url.  This will be a common occurrence.  Once I changed back to struts 2.1.8 it worked fine.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=0,searchfield=]
2014-12-10 04:31:13:0483, answer_open, VisualItem[tree.nodes,5,id=16113198,type=20,title=,body=<p>This worked fine for me, too:</p>

<pre><code>&lt;welcome-file-list&gt;
&lt;welcome-file&gt;MyAction.action&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>

<p>I was not able to get the default action to execute when the user enters the webapp using the root of the web app (mywebapp/).  There is a bug in struts 2.3.12 that won't go to the default action or use the welcome page when you use the root url.  This will be a common occurrence.  Once I changed back to struts 2.1.8 it worked fine.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=0,searchfield=]
2014-12-10 04:31:13:0483, diag_detail_itementered, id=16113198, type=20
2014-12-10 04:31:13:0529, diag_detail_itemexited, id=16113198, type=20
2014-12-10 04:31:13:0639, answer_open, VisualItem[tree.nodes,7,id=40745,type=20,title=,body=<p>I would create a filter and bounce all requests to root back with forward responce. Hacks with creating home.do page looks ugly to me (One more thing to remember for you and investigate for someone who will support your code). </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:31:13:0639, answer_open, VisualItem[tree.nodes,7,id=40745,type=20,title=,body=<p>I would create a filter and bounce all requests to root back with forward responce. Hacks with creating home.do page looks ugly to me (One more thing to remember for you and investigate for someone who will support your code). </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:31:13:0639, diag_detail_itementered, id=40745, type=20
2014-12-10 04:31:13:0685, diag_detail_itemexited, id=40745, type=20
2014-12-10 04:31:13:0685, answer_open, VisualItem[tree.nodes,8,id=43879,type=20,title=,body=<p>Personally, I'd keep the same setup you have now, but change the redirect for a forward.  That avoids sending a header back to the client and having them make another request.</p>

<p>So, in particular, I'd replace the </p>

<pre><code>&lt;% 
  response.sendRedirect("/myproject/MyAction.action");
%&gt;
</code></pre>

<p>in index.jsp with</p>

<pre><code>&lt;jsp:forward page="/MyAction.action" /&gt;
</code></pre>

<p>The other effect of this change is that the user won't see the URL in the address bar change from "http://server/myproject" to "http://server/myproject/index.jsp", as the forward happens internally on the server.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=15,searchfield=]
2014-12-10 04:31:13:0685, answer_open, VisualItem[tree.nodes,8,id=43879,type=20,title=,body=<p>Personally, I'd keep the same setup you have now, but change the redirect for a forward.  That avoids sending a header back to the client and having them make another request.</p>

<p>So, in particular, I'd replace the </p>

<pre><code>&lt;% 
  response.sendRedirect("/myproject/MyAction.action");
%&gt;
</code></pre>

<p>in index.jsp with</p>

<pre><code>&lt;jsp:forward page="/MyAction.action" /&gt;
</code></pre>

<p>The other effect of this change is that the user won't see the URL in the address bar change from "http://server/myproject" to "http://server/myproject/index.jsp", as the forward happens internally on the server.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=15,searchfield=]
2014-12-10 04:31:13:0685, diag_detail_itementered, id=43879, type=20
2014-12-10 04:31:13:0732, diag_detail_itemexited, id=43879, type=20
2014-12-10 04:31:52:0561, answer_create, 34586ms
2014-12-10 04:31:52:0561, answer_create_open
2014-12-10 04:31:52:0561, diag_detail_itementered, id=1547304319, type=3
2014-12-10 04:31:52:0594, edge_create, Tuple[0,1,0.4215637531322898,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0594, answer_create, 14811399
2014-12-10 04:31:52:0594, edge_create, Tuple[1,2,0.5949612383752884,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0594, answer_create, 15551450
2014-12-10 04:31:52:0594, edge_create, Tuple[1,3,0.6207460420231391,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0594, answer_create, 15905476
2014-12-10 04:31:52:0594, edge_create, Tuple[1,4,0.8147094181145422,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0594, answer_create, 16113198
2014-12-10 04:31:52:0610, edge_create, Tuple[1,5,0.039823408088764056,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0610, answer_create, 16638674
2014-12-10 04:31:52:0610, edge_create, Tuple[1,6,0.5215434372602015,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0610, answer_create, 40745
2014-12-10 04:31:52:0610, edge_create, Tuple[1,7,0.31616837398317277,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0610, answer_create, 43879
2014-12-10 04:31:52:0610, edge_create, Tuple[1,8,0.21381835850538544,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0610, answer_create, 39599
2014-12-10 04:31:52:0610, edge_create, Tuple[1,9,0.4933300007926168,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0610, answer_create, 42614
2014-12-10 04:31:52:0625, edge_create, Tuple[1,10,0.28419211599832694,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0625, answer_create, 318846
2014-12-10 04:31:52:0625, edge_create, Tuple[1,11,0.43536061533409776,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0625, answer_create, 2166139
2014-12-10 04:31:52:0625, edge_create, Tuple[1,12,0.050243902690845,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0625, answer_create, 4842983
2014-12-10 04:31:52:0625, edge_create, Tuple[1,13,0.6336584160206167,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0625, answer_create, 1775500
2014-12-10 04:31:52:0625, edge_create, Tuple[1,14,0.933114274073985,4,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0625, edge_create, Tuple[0,15,0.33574246568040533,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0625, edge_create, Tuple[15,16,0.18019209402530711,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0641, edge_create, Tuple[15,17,0.9024319128781398,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0641, edge_create, Tuple[15,18,0.3783714697118,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0657, edge_create, Tuple[15,19,0.8776021520987928,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0657, edge_create, Tuple[15,20,0.5790818948281443,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0672, edge_create, Tuple[15,21,0.7777664473616149,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0672, edge_create, Tuple[15,22,0.8514469510687477,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0688, edge_create, Tuple[15,23,0.6875310649364496,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0703, edge_create, Tuple[15,24,0.08246298572058453,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0719, edge_create, Tuple[15,25,0.5074743773903507,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0719, edge_create, Tuple[15,26,0.5805509452785488,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0735, edge_create, Tuple[15,27,0.034805035824847175,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0735, edge_create, Tuple[15,28,0.6293833571751243,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0750, edge_create, Tuple[15,29,0.8714896504000753,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0750, edge_create, Tuple[15,30,0.3413160767914172,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0766, edge_create, Tuple[15,31,0.6222561164102259,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0766, edge_create, Tuple[15,32,0.6234720010131138,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0781, edge_create, Tuple[15,33,0.6544532969328263,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0781, edge_create, Tuple[15,34,0.5845736787085524,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0797, edge_create, Tuple[15,35,0.29728102754166075,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0797, edge_create, Tuple[15,36,0.4576651846084848,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0813, edge_create, Tuple[15,37,0.22912442170059855,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0813, edge_create, Tuple[15,38,0.9141902759986799,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0828, edge_create, Tuple[15,39,0.6739831752519266,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0828, edge_create, Tuple[15,40,0.21041993113423318,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0844, edge_create, Tuple[15,41,0.1522585817967551,1,0.0,1418246266163,1418246266163]
2014-12-10 04:31:52:0859, discussion_open, 39399
2014-12-10 04:31:52:0859, setup_loaddata_begin
2014-12-10 04:31:54:0513, setup_loaddata_end
2014-12-10 04:31:54:0513, setup_createactions_begin
2014-12-10 04:31:54:0544, setup_createactions_end
2014-12-10 04:31:54:0747, list_mouseentered, type=detailAnswersList
2014-12-10 04:31:59:0614, list_mouseexited, type=detailAnswersList
2014-12-10 04:31:59:0692, answer_open, VisualItem[tree.nodes,4,id=15905476,type=20,title=,body=<p>Just add a filter in web.xml like</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;customfilter&lt;/filter-name&gt;
    &lt;filter-class&gt;com.example.CustomFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;customfilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>And add the following code in doFilter method of that CustomFilter class</p>

<pre><code>public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse,
        FilterChain filterChain) throws IOException, ServletException {
    HttpServletRequest httpRequest = (HttpServletRequest)servletRequest;
    HttpServletResponse httpResponse = (HttpServletResponse)servletResponse;
    if (! httpResponse.isCommitted()) {
        if ((httpRequest.getContextPath() + "/").equals(httpRequest.getRequestURI())) {
            httpResponse.sendRedirect(httpRequest.getContextPath() + "/MyAction");
        }
        else {
            filterChain.doFilter(servletRequest, servletResponse);
        }
    }
}
</code></pre>

<p>So that Filter will redirect to the action. You dont need any JSP to be placed outside WEB-INF as well. </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=0,searchfield=]
2014-12-10 04:31:59:0692, answer_open, VisualItem[tree.nodes,4,id=15905476,type=20,title=,body=<p>Just add a filter in web.xml like</p>

<pre><code>&lt;filter&gt;
    &lt;filter-name&gt;customfilter&lt;/filter-name&gt;
    &lt;filter-class&gt;com.example.CustomFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;customfilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>And add the following code in doFilter method of that CustomFilter class</p>

<pre><code>public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse,
        FilterChain filterChain) throws IOException, ServletException {
    HttpServletRequest httpRequest = (HttpServletRequest)servletRequest;
    HttpServletResponse httpResponse = (HttpServletResponse)servletResponse;
    if (! httpResponse.isCommitted()) {
        if ((httpRequest.getContextPath() + "/").equals(httpRequest.getRequestURI())) {
            httpResponse.sendRedirect(httpRequest.getContextPath() + "/MyAction");
        }
        else {
            filterChain.doFilter(servletRequest, servletResponse);
        }
    }
}
</code></pre>

<p>So that Filter will redirect to the action. You dont need any JSP to be placed outside WEB-INF as well. </p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=0,searchfield=]
2014-12-10 04:31:59:0692, diag_detail_itementered, id=15905476, type=20
2014-12-10 04:31:59:0833, diag_detail_itemexited, id=15905476, type=20
2014-12-10 04:32:00:0129, answer_open, VisualItem[tree.nodes,2,id=14811399,type=20,title=,body=<p>This works as well reducing the need of a new servlet or jsp</p>

<pre><code>&lt;welcome-file-list&gt;
&lt;welcome-file&gt;/MyAction.action&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:00:0129, answer_open, VisualItem[tree.nodes,2,id=14811399,type=20,title=,body=<p>This works as well reducing the need of a new servlet or jsp</p>

<pre><code>&lt;welcome-file-list&gt;
&lt;welcome-file&gt;/MyAction.action&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:00:0129, diag_detail_itementered, id=14811399, type=20
2014-12-10 04:32:01:0377, diag_detail_itemexited, id=14811399, type=20
2014-12-10 04:32:01:0424, diag_detail_itementered, id=0.31616837398317277, type=4
2014-12-10 04:32:01:0471, diag_detail_itemexited, id=0.31616837398317277, type=4
2014-12-10 04:32:01:0471, diag_detail_itementered, id=0.050243902690845, type=4
2014-12-10 04:32:01:0502, diag_detail_itemexited, id=0.050243902690845, type=4
2014-12-10 04:32:01:0517, diag_detail_itementered, id=0.6336584160206167, type=4
2014-12-10 04:32:01:0642, diag_detail_itemexited, id=0.6336584160206167, type=4
2014-12-10 04:32:01:0736, diag_detail_itementered, id=0.933114274073985, type=4
2014-12-10 04:32:01:0923, diag_detail_itemexited, id=0.933114274073985, type=4
2014-12-10 04:32:01:0923, answer_open, VisualItem[tree.nodes,14,id=1775500,type=20,title=,body=<p>Something that I do is to put an empty file of the same name as your struts action and trick the container to call the struts action.</p>

<p>Ex. If your struts action is welcome.do, create an empty file named welcome.do. That should trick the container to call the Struts action.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:32:01:0923, answer_open, VisualItem[tree.nodes,14,id=1775500,type=20,title=,body=<p>Something that I do is to put an empty file of the same name as your struts action and trick the container to call the struts action.</p>

<p>Ex. If your struts action is welcome.do, create an empty file named welcome.do. That should trick the container to call the Struts action.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=2,searchfield=]
2014-12-10 04:32:01:0923, diag_detail_itementered, id=1775500, type=20
2014-12-10 04:32:02:0875, diag_detail_itemexited, id=1775500, type=20
2014-12-10 04:32:05:0449, diag_detail_itementered, id=0.933114274073985, type=4
2014-12-10 04:32:05:0480, diag_detail_itemexited, id=0.933114274073985, type=4
2014-12-10 04:32:05:0542, answer_open, VisualItem[tree.nodes,12,id=2166139,type=20,title=,body=<p>create an empty file with name as your struts action, then set the name into "welcome-file-list" in your web.xml.</p>

<p>For eg: your struts action : "welcome.do"
1. create an empty file and named it: "welcome.do" then put into your web dir
2. put welcome.do in your "welcome-file-list" in web.xml file</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:05:0542, answer_open, VisualItem[tree.nodes,12,id=2166139,type=20,title=,body=<p>create an empty file with name as your struts action, then set the name into "welcome-file-list" in your web.xml.</p>

<p>For eg: your struts action : "welcome.do"
1. create an empty file and named it: "welcome.do" then put into your web dir
2. put welcome.do in your "welcome-file-list" in web.xml file</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:05:0542, diag_detail_itementered, id=2166139, type=20
2014-12-10 04:32:05:0589, diag_detail_itemexited, id=2166139, type=20
2014-12-10 04:32:05:0636, answer_open, VisualItem[tree.nodes,13,id=4842983,type=20,title=,body=<p>This is a pretty old thread but the topic discussed, i think, is still relevant. I use a struts tag - s:action to achieve this. I created an index.jsp in which i wrote this...</p>

<pre><code>&lt;s:action name="loadHomePage" namespace="/load" executeResult="true" /&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=6,searchfield=]
2014-12-10 04:32:05:0636, answer_open, VisualItem[tree.nodes,13,id=4842983,type=20,title=,body=<p>This is a pretty old thread but the topic discussed, i think, is still relevant. I use a struts tag - s:action to achieve this. I created an index.jsp in which i wrote this...</p>

<pre><code>&lt;s:action name="loadHomePage" namespace="/load" executeResult="true" /&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=6,searchfield=]
2014-12-10 04:32:05:0636, diag_detail_itementered, id=4842983, type=20
2014-12-10 04:32:06:0307, diag_detail_itemexited, id=4842983, type=20
2014-12-10 04:32:06:0322, answer_open, VisualItem[tree.nodes,12,id=2166139,type=20,title=,body=<p>create an empty file with name as your struts action, then set the name into "welcome-file-list" in your web.xml.</p>

<p>For eg: your struts action : "welcome.do"
1. create an empty file and named it: "welcome.do" then put into your web dir
2. put welcome.do in your "welcome-file-list" in web.xml file</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:06:0322, answer_open, VisualItem[tree.nodes,12,id=2166139,type=20,title=,body=<p>create an empty file with name as your struts action, then set the name into "welcome-file-list" in your web.xml.</p>

<p>For eg: your struts action : "welcome.do"
1. create an empty file and named it: "welcome.do" then put into your web dir
2. put welcome.do in your "welcome-file-list" in web.xml file</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:06:0322, diag_detail_itementered, id=2166139, type=20
2014-12-10 04:32:06:0369, diag_detail_itemexited, id=2166139, type=20
2014-12-10 04:32:06:0432, answer_open, VisualItem[tree.nodes,10,id=42614,type=20,title=,body=<p>"Surely there's a better way!"</p>

<p>There isn't. Servlet specifications (Java Servlet Specification 2.4, "SRV.9.10 Welcome Files" for instance) state:</p>

<blockquote>
  <p>The purpose of this mechanism is to allow the deployer to specify an ordered
  list of partial URIs for the container to use for appending to URIs when there is a
  request for a URI that corresponds to a directory entry in the WAR not mapped to
  a Web component.</p>
</blockquote>

<p>You can't map Struts on '/', because Struts kind of require to work with a file extension. So you're left to use an implicitely mapped component, such as a JSP or a static file. All the other solutions are just hacks. So keep your solution, it's perfectly readable and maintainable, don't bother looking further.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=4,searchfield=]
2014-12-10 04:32:06:0432, answer_open, VisualItem[tree.nodes,10,id=42614,type=20,title=,body=<p>"Surely there's a better way!"</p>

<p>There isn't. Servlet specifications (Java Servlet Specification 2.4, "SRV.9.10 Welcome Files" for instance) state:</p>

<blockquote>
  <p>The purpose of this mechanism is to allow the deployer to specify an ordered
  list of partial URIs for the container to use for appending to URIs when there is a
  request for a URI that corresponds to a directory entry in the WAR not mapped to
  a Web component.</p>
</blockquote>

<p>You can't map Struts on '/', because Struts kind of require to work with a file extension. So you're left to use an implicitely mapped component, such as a JSP or a static file. All the other solutions are just hacks. So keep your solution, it's perfectly readable and maintainable, don't bother looking further.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=4,searchfield=]
2014-12-10 04:32:06:0432, diag_detail_itementered, id=42614, type=20
2014-12-10 04:32:06:0478, diag_detail_itemexited, id=42614, type=20
2014-12-10 04:32:06:0650, answer_open, VisualItem[tree.nodes,8,id=43879,type=20,title=,body=<p>Personally, I'd keep the same setup you have now, but change the redirect for a forward.  That avoids sending a header back to the client and having them make another request.</p>

<p>So, in particular, I'd replace the </p>

<pre><code>&lt;% 
  response.sendRedirect("/myproject/MyAction.action");
%&gt;
</code></pre>

<p>in index.jsp with</p>

<pre><code>&lt;jsp:forward page="/MyAction.action" /&gt;
</code></pre>

<p>The other effect of this change is that the user won't see the URL in the address bar change from "http://server/myproject" to "http://server/myproject/index.jsp", as the forward happens internally on the server.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=15,searchfield=]
2014-12-10 04:32:06:0650, answer_open, VisualItem[tree.nodes,8,id=43879,type=20,title=,body=<p>Personally, I'd keep the same setup you have now, but change the redirect for a forward.  That avoids sending a header back to the client and having them make another request.</p>

<p>So, in particular, I'd replace the </p>

<pre><code>&lt;% 
  response.sendRedirect("/myproject/MyAction.action");
%&gt;
</code></pre>

<p>in index.jsp with</p>

<pre><code>&lt;jsp:forward page="/MyAction.action" /&gt;
</code></pre>

<p>The other effect of this change is that the user won't see the URL in the address bar change from "http://server/myproject" to "http://server/myproject/index.jsp", as the forward happens internally on the server.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=15,searchfield=]
2014-12-10 04:32:06:0650, diag_detail_itementered, id=43879, type=20
2014-12-10 04:32:07:0898, diag_detail_itemexited, id=43879, type=20
2014-12-10 04:32:08:0023, answer_open, VisualItem[tree.nodes,9,id=39599,type=20,title=,body=<p>It appears that a popular solution will not work in all containers... <a href="http://www.theserverside.com/discussions/thread.tss?thread_id=30190" rel="nofollow">http://www.theserverside.com/discussions/thread.tss?thread_id=30190</a></p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:08:0023, answer_open, VisualItem[tree.nodes,9,id=39599,type=20,title=,body=<p>It appears that a popular solution will not work in all containers... <a href="http://www.theserverside.com/discussions/thread.tss?thread_id=30190" rel="nofollow">http://www.theserverside.com/discussions/thread.tss?thread_id=30190</a></p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:08:0023, diag_detail_itementered, id=39599, type=20
2014-12-10 04:32:08:0070, diag_detail_itemexited, id=39599, type=20
2014-12-10 04:32:08:0070, answer_open, VisualItem[tree.nodes,10,id=42614,type=20,title=,body=<p>"Surely there's a better way!"</p>

<p>There isn't. Servlet specifications (Java Servlet Specification 2.4, "SRV.9.10 Welcome Files" for instance) state:</p>

<blockquote>
  <p>The purpose of this mechanism is to allow the deployer to specify an ordered
  list of partial URIs for the container to use for appending to URIs when there is a
  request for a URI that corresponds to a directory entry in the WAR not mapped to
  a Web component.</p>
</blockquote>

<p>You can't map Struts on '/', because Struts kind of require to work with a file extension. So you're left to use an implicitely mapped component, such as a JSP or a static file. All the other solutions are just hacks. So keep your solution, it's perfectly readable and maintainable, don't bother looking further.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=4,searchfield=]
2014-12-10 04:32:08:0070, answer_open, VisualItem[tree.nodes,10,id=42614,type=20,title=,body=<p>"Surely there's a better way!"</p>

<p>There isn't. Servlet specifications (Java Servlet Specification 2.4, "SRV.9.10 Welcome Files" for instance) state:</p>

<blockquote>
  <p>The purpose of this mechanism is to allow the deployer to specify an ordered
  list of partial URIs for the container to use for appending to URIs when there is a
  request for a URI that corresponds to a directory entry in the WAR not mapped to
  a Web component.</p>
</blockquote>

<p>You can't map Struts on '/', because Struts kind of require to work with a file extension. So you're left to use an implicitely mapped component, such as a JSP or a static file. All the other solutions are just hacks. So keep your solution, it's perfectly readable and maintainable, don't bother looking further.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=4,searchfield=]
2014-12-10 04:32:08:0070, diag_detail_itementered, id=42614, type=20
2014-12-10 04:32:08:0616, diag_detail_itemexited, id=42614, type=20
2014-12-10 04:32:08:0662, answer_open, VisualItem[tree.nodes,11,id=318846,type=20,title=,body=<p>As of the 2.4 version of the Servlet specification you are allowed to have a servlet in the welcome file list. Note that this may not be a URL (such as /myproject/MyAction.action). It must be a named servlet and you cannot pass a query string to the servlet. Your controller servlet would need to have a default action.</p>

<pre><code>&lt;servlet&gt;
  &lt;servlet-name&gt;MyController&lt;/servlet-name&gt;
  &lt;servlet-class&gt;com.example.MyControllerServlet&lt;/servlet-class&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
  &lt;servlet-name&gt;MyController&lt;/servlet-name&gt;
  &lt;url-pattern&gt;*.action&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;welcome-file-list&gt;
  &lt;welcome-file&gt;MyController&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=6,searchfield=]
2014-12-10 04:32:08:0662, answer_open, VisualItem[tree.nodes,11,id=318846,type=20,title=,body=<p>As of the 2.4 version of the Servlet specification you are allowed to have a servlet in the welcome file list. Note that this may not be a URL (such as /myproject/MyAction.action). It must be a named servlet and you cannot pass a query string to the servlet. Your controller servlet would need to have a default action.</p>

<pre><code>&lt;servlet&gt;
  &lt;servlet-name&gt;MyController&lt;/servlet-name&gt;
  &lt;servlet-class&gt;com.example.MyControllerServlet&lt;/servlet-class&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
  &lt;servlet-name&gt;MyController&lt;/servlet-name&gt;
  &lt;url-pattern&gt;*.action&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;welcome-file-list&gt;
  &lt;welcome-file&gt;MyController&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=6,searchfield=]
2014-12-10 04:32:08:0662, diag_detail_itementered, id=318846, type=20
2014-12-10 04:32:09:0177, diag_detail_itemexited, id=318846, type=20
2014-12-10 04:32:09:0271, answer_open, VisualItem[tree.nodes,12,id=2166139,type=20,title=,body=<p>create an empty file with name as your struts action, then set the name into "welcome-file-list" in your web.xml.</p>

<p>For eg: your struts action : "welcome.do"
1. create an empty file and named it: "welcome.do" then put into your web dir
2. put welcome.do in your "welcome-file-list" in web.xml file</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:09:0271, answer_open, VisualItem[tree.nodes,12,id=2166139,type=20,title=,body=<p>create an empty file with name as your struts action, then set the name into "welcome-file-list" in your web.xml.</p>

<p>For eg: your struts action : "welcome.do"
1. create an empty file and named it: "welcome.do" then put into your web dir
2. put welcome.do in your "welcome-file-list" in web.xml file</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=1,searchfield=]
2014-12-10 04:32:09:0271, diag_detail_itementered, id=2166139, type=20
2014-12-10 04:32:09:0770, diag_detail_itemexited, id=2166139, type=20
2014-12-10 04:32:09:0942, answer_open, VisualItem[tree.nodes,13,id=4842983,type=20,title=,body=<p>This is a pretty old thread but the topic discussed, i think, is still relevant. I use a struts tag - s:action to achieve this. I created an index.jsp in which i wrote this...</p>

<pre><code>&lt;s:action name="loadHomePage" namespace="/load" executeResult="true" /&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=6,searchfield=]
2014-12-10 04:32:09:0942, answer_open, VisualItem[tree.nodes,13,id=4842983,type=20,title=,body=<p>This is a pretty old thread but the topic discussed, i think, is still relevant. I use a struts tag - s:action to achieve this. I created an index.jsp in which i wrote this...</p>

<pre><code>&lt;s:action name="loadHomePage" namespace="/load" executeResult="true" /&gt;
</code></pre>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=6,searchfield=]
2014-12-10 04:32:09:0942, diag_detail_itementered, id=4842983, type=20
2014-12-10 04:32:11:0127, diag_detail_itemexited, id=4842983, type=20
2014-12-10 04:32:11:0174, diag_detail_itementered, id=0.6336584160206167, type=4
2014-12-10 04:32:11:0252, diag_detail_itemexited, id=0.6336584160206167, type=4
2014-12-10 04:32:11:0455, diag_detail_itementered, id=0.6336584160206167, type=4
2014-12-10 04:32:11:0486, diag_detail_itemexited, id=0.6336584160206167, type=4
2014-12-10 04:32:11:0486, diag_detail_itementered, id=1583740468, type=3
2014-12-10 04:32:14:0185, diag_detail_itemexited, id=1583740468, type=3
2014-12-10 04:32:14:0512, diag_detail_itementered, id=39399, type=1
2014-12-10 04:32:16:0135, diag_detail_itemexited, id=39399, type=1
2014-12-10 04:32:16:0275, diag_detail_itementered, id=1583740468, type=3
2014-12-10 04:32:16:0322, diag_detail_itemexited, id=1583740468, type=3
2014-12-10 04:32:16:0478, diag_detail_itementered, id=0.31616837398317277, type=4
2014-12-10 04:32:16:0509, diag_detail_itemexited, id=0.31616837398317277, type=4
2014-12-10 04:32:16:0525, diag_detail_itementered, id=0.5215434372602015, type=4
2014-12-10 04:32:16:0681, diag_detail_itemexited, id=0.5215434372602015, type=4
2014-12-10 04:32:16:0681, diag_detail_itementered, id=1583740468, type=3
2014-12-10 04:32:17:0258, diag_detail_itemexited, id=1583740468, type=3
2014-12-10 04:32:17:0258, diag_detail_itementered, id=0.8147094181145422, type=4
2014-12-10 04:32:18:0007, diag_detail_itemexited, id=0.8147094181145422, type=4
2014-12-10 04:32:18:0038, diag_detail_itementered, id=0.039823408088764056, type=4
2014-12-10 04:32:18:0069, diag_detail_itemexited, id=0.039823408088764056, type=4
2014-12-10 04:32:18:0069, diag_detail_itementered, id=1583740468, type=3
2014-12-10 04:32:18:0412, diag_detail_itemexited, id=1583740468, type=3
2014-12-10 04:32:18:0412, diag_detail_itementered, id=0.039823408088764056, type=4
2014-12-10 04:32:18:0444, diag_detail_itemexited, id=0.039823408088764056, type=4
2014-12-10 04:32:18:0475, diag_detail_itementered, id=0.039823408088764056, type=4
2014-12-10 04:32:18:0522, diag_detail_itemexited, id=0.039823408088764056, type=4
2014-12-10 04:32:19:0317, diag_detail_itementered, id=0.039823408088764056, type=4
2014-12-10 04:32:19:0333, diag_detail_itemexited, id=0.039823408088764056, type=4
2014-12-10 04:32:19:0442, diag_detail_itementered, id=0.5215434372602015, type=4
2014-12-10 04:32:19:0458, diag_detail_itemexited, id=0.5215434372602015, type=4
2014-12-10 04:32:19:0458, diag_detail_itementered, id=1583740468, type=3
2014-12-10 04:32:20:0191, diag_detail_itemexited, id=1583740468, type=3
2014-12-10 04:32:20:0206, diag_detail_itementered, id=0.31616837398317277, type=4
2014-12-10 04:32:20:0238, diag_detail_itemexited, id=0.31616837398317277, type=4
2014-12-10 04:33:10:0501, answer_create_cancel, 1545ms
2014-12-10 04:33:10:0501, answer_create_open
2014-12-10 04:33:10:0517, edge_create, Tuple[0,1,0.9439066244660969,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0517, answer_create, 14811399
2014-12-10 04:33:10:0533, edge_create, Tuple[1,2,0.6602170957525724,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 15551450
2014-12-10 04:33:10:0533, edge_create, Tuple[1,3,0.666991230489409,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 15905476
2014-12-10 04:33:10:0533, edge_create, Tuple[1,4,0.048086599289739684,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 16113198
2014-12-10 04:33:10:0533, edge_create, Tuple[1,5,0.5914118778550396,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 16638674
2014-12-10 04:33:10:0533, edge_create, Tuple[1,6,0.24040696725899158,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 40745
2014-12-10 04:33:10:0533, edge_create, Tuple[1,7,0.21281427382370244,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 43879
2014-12-10 04:33:10:0533, edge_create, Tuple[1,8,0.3650671632173158,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 39599
2014-12-10 04:33:10:0533, edge_create, Tuple[1,9,0.007309253381517777,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 42614
2014-12-10 04:33:10:0533, edge_create, Tuple[1,10,0.838517971103741,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 318846
2014-12-10 04:33:10:0533, edge_create, Tuple[1,11,0.5506184109325367,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0533, answer_create, 2166139
2014-12-10 04:33:10:0548, edge_create, Tuple[1,12,0.12929624032169107,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0548, answer_create, 4842983
2014-12-10 04:33:10:0548, edge_create, Tuple[1,13,0.5348896251060778,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0548, answer_create, 1775500
2014-12-10 04:33:10:0548, edge_create, Tuple[1,14,0.15501738635778262,4,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0548, edge_create, Tuple[0,15,0.07192472583636556,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0548, edge_create, Tuple[15,16,0.8120923006644605,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0548, edge_create, Tuple[15,17,0.30105221120933623,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0566, edge_create, Tuple[15,18,0.7280052977142578,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0566, edge_create, Tuple[15,19,0.21554176914284917,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0581, edge_create, Tuple[15,20,0.2711224515211055,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0581, edge_create, Tuple[15,21,0.40145991679581694,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0597, edge_create, Tuple[15,22,0.5599129229790492,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0597, edge_create, Tuple[15,23,0.30599608391354405,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0613, edge_create, Tuple[15,24,0.35501033405049554,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0613, edge_create, Tuple[15,25,0.8679604861622942,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0628, edge_create, Tuple[15,26,0.48219312557283267,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0628, edge_create, Tuple[15,27,0.14140645185016876,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0644, edge_create, Tuple[15,28,0.7762249191449279,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0644, edge_create, Tuple[15,29,0.6048271905966337,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0659, edge_create, Tuple[15,30,0.4242935337915319,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0659, edge_create, Tuple[15,31,0.49440727979073595,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0675, edge_create, Tuple[15,32,0.2588725861104625,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0675, edge_create, Tuple[15,33,0.9422871509419687,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0691, edge_create, Tuple[15,34,0.7541792005041732,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0691, edge_create, Tuple[15,35,0.2922641960294231,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0706, edge_create, Tuple[15,36,0.7346165802265857,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0706, edge_create, Tuple[15,37,0.4489694232061865,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0722, edge_create, Tuple[15,38,0.6398978935996793,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0722, edge_create, Tuple[15,39,0.8761152339579291,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0737, edge_create, Tuple[15,40,0.4077987584415693,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0737, edge_create, Tuple[15,41,0.1693188392321,1,0.0,1418246266163,1418246266163]
2014-12-10 04:33:10:0753, discussion_open, 39399
2014-12-10 04:33:10:0769, setup_loaddata_begin
2014-12-10 04:33:12:0407, setup_loaddata_end
2014-12-10 04:33:12:0407, setup_createactions_begin
2014-12-10 04:33:12:0422, setup_createactions_end
2014-12-10 04:34:13:0715, list_mouseentered, id=24723, type=1
2014-12-10 04:34:13:0715, list_mousemoved, id=24723, type=1
2014-12-10 04:34:13:0747, list_mouseexited
2014-12-10 04:34:14:0885, diag_itementered, id=20127, type=1
2014-12-10 04:34:14:0932, diag_itemexited, id=20127, type=1
2014-12-10 04:34:14:0948, diag_itementered, id=47605, type=1
2014-12-10 04:34:15:0026, diag_itemexited, id=47605, type=1
2014-12-10 04:34:15:0104, diag_itemexited, id=3, type=4
2014-12-10 04:34:15:0104, diag_itementered, id=1, type=0
2014-12-10 04:34:19:0737, diag_itemexited, id=1, type=0
2014-12-10 04:34:19:0799, diag_itemexited, id=3, type=4
2014-12-10 04:34:19:0799, diag_itementered, id=43344, type=1
2014-12-10 04:34:19:0877, diag_itemexited, id=43344, type=1
2014-12-10 04:34:19:0877, diag_itementered, id=1, type=0
2014-12-10 04:34:19:0955, diag_itemexited, id=1, type=0
2014-12-10 04:34:20:0330, diag_itemexited, id=1, type=4
2014-12-10 04:34:20:0330, diag_itementered, id=1, type=0
2014-12-10 04:34:22:0436, edge_create, Tuple[0,1,0.8899822279995314,1,0.0,1418246266163,1418246266163]
2014-12-10 04:34:22:0436, edge_create, Tuple[1,2,0.22482354089964451,1,0.0,1418246266163,1418246266163]
2014-12-10 04:34:22:0436, edge_create, Tuple[1,3,0.3523786420565468,1,0.0,1418246266163,1418246266163]
2014-12-10 04:34:22:0451, edge_create, Tuple[1,4,0.03274981720561487,1,0.0,1418246266163,1418246266163]
2014-12-10 04:34:22:0467, pattern_open, 1
2014-12-10 04:34:22:0467, diag_itemclicked, id=1, type=0
2014-12-10 04:34:23:0497, diag_itemexited, id=1, type=0
2014-12-10 04:34:26:0991, diag_detail_itementered, id=0.22482354089964451, type=1
2014-12-10 04:34:27:0007, diag_detail_itemexited, id=0.22482354089964451, type=1
2014-12-10 04:34:28:0426, diag_detail_itementered, id=0.3523786420565468, type=1
2014-12-10 04:34:28:0442, diag_detail_itemexited, id=0.3523786420565468, type=1
2014-12-10 04:34:28:0692, diag_detail_itementered, id=0.3523786420565468, type=1
2014-12-10 04:34:28:0832, diag_detail_itemexited, id=0.3523786420565468, type=1
2014-12-10 04:34:28:0848, diag_detail_itementered, id=27129, type=1
2014-12-10 04:34:30:0220, diag_detail_itemexited, id=27129, type=1
2014-12-10 04:35:14:0712, diag_detail_itementered, id=1, type=0
2014-12-10 04:35:14:0728, diag_detail_itemexited, id=1, type=0
2014-12-10 04:35:14:0977, diag_detail_itementered, id=1, type=0
2014-12-10 04:35:17:0520, diag_detail_itemexited, id=1, type=0
2014-12-10 04:35:18:0066, diag_detail_itementered, id=0.3523786420565468, type=1
2014-12-10 04:35:18:0082, diag_detail_itemexited, id=0.3523786420565468, type=1
2014-12-10 04:35:18:0409, diag_detail_itementered, id=27129, type=1
2014-12-10 04:35:20:0328, diag_detail_itemclicked, id=27129, type=1
2014-12-10 04:35:20:0999, diag_detail_itemexited, id=27129, type=1
2014-12-10 04:35:21:0966, diag_detail_itementered, id=27129, type=1
2014-12-10 04:35:22:0294, diag_detail_itemclicked, id=27129, type=1
2014-12-10 04:35:22:0824, edge_create, Tuple[0,1,0.7284397215409916,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0824, answer_create, 27150
2014-12-10 04:35:22:0824, edge_create, Tuple[1,2,0.2573125794374882,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0824, answer_create, 27168
2014-12-10 04:35:22:0824, edge_create, Tuple[1,3,0.7781223757749411,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0824, answer_create, 27192
2014-12-10 04:35:22:0824, edge_create, Tuple[1,4,0.955878268371125,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0824, answer_create, 27245
2014-12-10 04:35:22:0824, edge_create, Tuple[1,5,0.4018733037745915,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0824, answer_create, 27268
2014-12-10 04:35:22:0824, edge_create, Tuple[1,6,0.8161977306102353,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0824, answer_create, 44029
2014-12-10 04:35:22:0824, edge_create, Tuple[1,7,0.03426866456528421,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0824, answer_create, 338771
2014-12-10 04:35:22:0840, edge_create, Tuple[1,8,0.21178675084161824,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0840, edge_create, Tuple[0,9,0.8488416791943616,2,1.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0840, pattern_create, 1
2014-12-10 04:35:22:0840, edge_create, Tuple[9,10,0.6670701498989929,2,1.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0840, edge_create, Tuple[0,11,0.3256730583628261,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0840, edge_create, Tuple[11,12,0.1795184438360823,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0840, edge_create, Tuple[11,13,0.5486919743618999,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0857, edge_create, Tuple[11,14,0.8136319038569454,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0857, edge_create, Tuple[11,15,0.31936513936703115,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0873, edge_create, Tuple[11,16,0.06308108872940721,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0873, edge_create, Tuple[11,17,0.25164152628678405,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0889, edge_create, Tuple[11,18,0.8532635543902564,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0889, edge_create, Tuple[11,19,0.9193965140874302,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0904, edge_create, Tuple[11,20,0.5482693239934455,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0904, edge_create, Tuple[11,21,0.5975324498826463,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0935, edge_create, Tuple[11,22,0.6456799294614642,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0935, edge_create, Tuple[11,23,0.4223198769930313,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0951, edge_create, Tuple[11,24,0.8422925774303017,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0967, edge_create, Tuple[11,25,0.9121081282782265,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0967, edge_create, Tuple[11,26,0.07693164551846476,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0982, edge_create, Tuple[11,27,0.7684181965032307,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0982, edge_create, Tuple[11,28,0.8867669912172987,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0998, edge_create, Tuple[11,29,0.01751167982760149,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:22:0998, edge_create, Tuple[11,30,0.7254231028824126,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:23:0013, edge_create, Tuple[11,31,0.6672785103126833,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:23:0013, edge_create, Tuple[11,32,0.6996676435737138,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:23:0029, discussion_open, 27129
2014-12-10 04:35:23:0029, diag_detail_itemclicked, id=27129, type=1
2014-12-10 04:35:25:0478, diag_detail_itementered, id=851484766, type=3
2014-12-10 04:35:25:0509, diag_detail_itemexited, id=851484766, type=3
2014-12-10 04:35:25:0572, diag_detail_itementered, id=63030, type=1
2014-12-10 04:35:25:0587, diag_detail_itemexited, id=63030, type=1
2014-12-10 04:35:28:0645, diag_itementered, id=45546, type=1
2014-12-10 04:35:28:0692, diag_itemexited, id=45546, type=1
2014-12-10 04:35:29:0207, diag_itemexited, id=2, type=4
2014-12-10 04:35:29:0207, diag_itementered, id=25331, type=1
2014-12-10 04:35:29:0285, diag_itemexited, id=25331, type=1
2014-12-10 04:35:29:0300, diag_itementered, id=1, type=0
2014-12-10 04:35:29:0940, edge_create, Tuple[0,1,0.7228085377981277,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:29:0940, edge_create, Tuple[1,2,0.7922823348784056,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:29:0940, edge_create, Tuple[1,3,0.22103228218334292,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:29:0955, edge_create, Tuple[1,4,0.9981275391917352,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:29:0971, pattern_open, 1
2014-12-10 04:35:29:0971, diag_itemclicked, id=1, type=0
2014-12-10 04:35:30:0501, diag_itemexited, id=1, type=0
2014-12-10 04:35:30:0517, diag_detail_itementered, id=0.7922823348784056, type=1
2014-12-10 04:35:30:0533, diag_detail_itemexited, id=0.7922823348784056, type=1
2014-12-10 04:35:31:0625, diag_detail_itementered, id=22115, type=1
2014-12-10 04:35:32:0904, diag_detail_itemexited, id=22115, type=1
2014-12-10 04:35:33:0247, diag_detail_itementered, id=27129, type=1
2014-12-10 04:35:36:0773, diag_detail_itemexited, id=27129, type=1
2014-12-10 04:35:37:0147, diag_detail_itementered, id=22115, type=1
2014-12-10 04:35:39:0347, diag_detail_itemexited, id=22115, type=1
2014-12-10 04:35:39:0456, diag_detail_itementered, id=2089679437, type=3
2014-12-10 04:35:40:0673, diag_detail_itemexited, id=2089679437, type=3
2014-12-10 04:35:40:0720, diag_detail_itementered, id=1, type=0
2014-12-10 04:35:41:0562, diag_detail_itemexited, id=1, type=0
2014-12-10 04:35:41:0765, diag_detail_itementered, id=22115, type=1
2014-12-10 04:35:43:0886, diag_detail_itemclicked, id=22115, type=1
2014-12-10 04:35:44:0058, edge_create, Tuple[0,1,0.7706868937907057,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 22132
2014-12-10 04:35:44:0058, edge_create, Tuple[1,2,0.7453320492917798,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 22133
2014-12-10 04:35:44:0058, edge_create, Tuple[1,3,0.2945600708758871,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 22142
2014-12-10 04:35:44:0058, edge_create, Tuple[1,4,0.48150825191954016,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 22163
2014-12-10 04:35:44:0058, edge_create, Tuple[1,5,0.4080908592612885,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 245381
2014-12-10 04:35:44:0058, edge_create, Tuple[1,6,0.7440750677278666,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 280105
2014-12-10 04:35:44:0058, edge_create, Tuple[1,7,0.2891853889633911,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 412989
2014-12-10 04:35:44:0058, edge_create, Tuple[1,8,0.4129561762345303,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 1590630
2014-12-10 04:35:44:0058, edge_create, Tuple[1,9,0.4213932364777536,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0058, answer_create, 12151715
2014-12-10 04:35:44:0091, edge_create, Tuple[1,10,0.06252153207432143,4,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0091, edge_create, Tuple[0,11,0.16485879009360482,2,1.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0091, pattern_create, 1
2014-12-10 04:35:44:0091, edge_create, Tuple[11,12,0.4276978850844986,2,1.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0091, edge_create, Tuple[0,13,0.4308160174264728,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0091, edge_create, Tuple[13,14,0.40734955850101906,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0091, edge_create, Tuple[13,15,0.5255603251911305,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0107, edge_create, Tuple[13,16,0.8176165807853804,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0107, edge_create, Tuple[13,17,0.4741584429791803,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0122, edge_create, Tuple[13,18,0.24080456931219418,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0122, edge_create, Tuple[13,19,0.3336240477221233,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0138, edge_create, Tuple[13,20,0.8941909403925907,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0138, edge_create, Tuple[13,21,0.42649411860124253,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0154, edge_create, Tuple[13,22,0.960907050023681,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0154, edge_create, Tuple[13,23,0.3509162934988549,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0169, edge_create, Tuple[13,24,0.4156669181402489,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0169, edge_create, Tuple[13,25,0.6003500139051167,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0185, edge_create, Tuple[13,26,0.0659523092458838,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0200, edge_create, Tuple[13,27,0.7182745875569013,1,0.0,1418246266163,1418246266163]
2014-12-10 04:35:44:0200, discussion_open, 22115
2014-12-10 04:35:44:0216, diag_detail_itemclicked, id=22115, type=1
2014-12-10 04:36:07:0866, diag_detail_itementered, id=0.40734955850101906, type=1
2014-12-10 04:36:07:0897, diag_detail_itemexited, id=0.40734955850101906, type=1
2014-12-10 04:36:09:0129, list_mouseentered, type=detailRelatedList, item=2968
2014-12-10 04:36:09:0551, list_mouseexited, type=detailRelatedList
2014-12-10 04:36:22:0826, search_update, Differences between Hashmap and Hashtable
2014-12-10 04:36:24:0230, list_mouseentered, id=31693, type=1
2014-12-10 04:36:24:0230, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0262, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0761, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0776, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0792, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0808, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0823, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0839, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0854, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0870, list_mousemoved, id=31693, type=1
2014-12-10 04:36:24:0886, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0040, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0056, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0071, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0087, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0102, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0118, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0134, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0149, list_mousemoved, id=31693, type=1
2014-12-10 04:36:26:0165, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0180, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0196, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0196, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0212, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0227, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0243, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0258, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0258, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0290, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0305, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0305, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0321, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0336, list_mousemoved, id=564, type=1
2014-12-10 04:36:26:0352, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0368, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0383, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0399, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0414, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0430, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0461, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0477, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0492, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0508, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0508, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0508, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0539, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0539, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0570, list_mousemoved, id=40471, type=1
2014-12-10 04:36:26:0586, list_mousemoved, id=40471, type=1
2014-12-10 04:36:28:0458, list_pattern_itemclicked, id=40471, type=1
2014-12-10 04:36:28:0474, edge_create, Tuple[0,1,0.47937166422123145,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 40548
2014-12-10 04:36:28:0489, edge_create, Tuple[1,2,0.949981812177582,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 40848
2014-12-10 04:36:28:0489, edge_create, Tuple[1,3,0.23595007989757755,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 40483
2014-12-10 04:36:28:0489, edge_create, Tuple[1,4,0.17934148460260058,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 40512
2014-12-10 04:36:28:0489, edge_create, Tuple[1,5,0.7263683500933567,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 40522
2014-12-10 04:36:28:0489, edge_create, Tuple[1,6,0.6637118736246227,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 40878
2014-12-10 04:36:28:0489, edge_create, Tuple[1,7,0.600565448875513,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 40894
2014-12-10 04:36:28:0489, edge_create, Tuple[1,8,0.33090386902522595,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 41454
2014-12-10 04:36:28:0489, edge_create, Tuple[1,9,0.18318903106193618,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 1041798
2014-12-10 04:36:28:0489, edge_create, Tuple[1,10,0.5698970788093146,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 8832544
2014-12-10 04:36:28:0489, edge_create, Tuple[1,11,0.3312873521936207,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0489, answer_create, 7644118
2014-12-10 04:36:28:0505, edge_create, Tuple[1,12,0.9390748050201468,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 7344090
2014-12-10 04:36:28:0505, edge_create, Tuple[1,13,0.5741727222398377,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 10372667
2014-12-10 04:36:28:0505, edge_create, Tuple[1,14,0.7049462617799118,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 11883473
2014-12-10 04:36:28:0505, edge_create, Tuple[1,15,0.09496399687087309,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 13467173
2014-12-10 04:36:28:0505, edge_create, Tuple[1,16,0.799131981679561,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 13797704
2014-12-10 04:36:28:0505, edge_create, Tuple[1,17,0.47797375472233017,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 14452144
2014-12-10 04:36:28:0505, edge_create, Tuple[1,18,0.5959073984304502,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 14627155
2014-12-10 04:36:28:0505, edge_create, Tuple[1,19,0.8365097351742312,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 16018266
2014-12-10 04:36:28:0505, edge_create, Tuple[1,20,0.8365524134415027,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, answer_create, 17651399
2014-12-10 04:36:28:0505, edge_create, Tuple[1,21,0.2730955511732457,4,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, edge_create, Tuple[0,22,0.29549738683205584,2,1.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, pattern_create, 4
2014-12-10 04:36:28:0505, edge_create, Tuple[22,23,0.8205010531955584,2,1.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0505, edge_create, Tuple[0,24,0.1477610434348815,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0520, edge_create, Tuple[24,25,0.41984362282153687,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0522, edge_create, Tuple[24,26,0.9740478808876605,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0522, edge_create, Tuple[24,27,0.8545437075132413,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0538, edge_create, Tuple[24,28,0.4613358170944616,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0538, edge_create, Tuple[24,29,0.25988030342693236,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0554, edge_create, Tuple[24,30,0.9206929270851117,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0554, edge_create, Tuple[24,31,0.1417075034710933,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0569, edge_create, Tuple[24,32,0.06388994913612855,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0569, edge_create, Tuple[24,33,0.17960354317138238,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0585, edge_create, Tuple[24,34,0.13522523042963208,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0585, edge_create, Tuple[24,35,0.26498847489907595,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0600, edge_create, Tuple[24,36,0.5795773891034265,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0600, edge_create, Tuple[24,37,0.679860587582385,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0616, edge_create, Tuple[24,38,0.3023996620760002,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0616, edge_create, Tuple[24,39,0.3936731887277227,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0632, edge_create, Tuple[24,40,0.11814487620901815,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0647, edge_create, Tuple[24,41,0.6220463963379267,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0647, edge_create, Tuple[24,42,0.8320641640793986,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0663, edge_create, Tuple[24,43,0.9196430422368507,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0663, edge_create, Tuple[24,44,0.2136800060300258,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0678, edge_create, Tuple[24,45,0.6794263780534147,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0678, edge_create, Tuple[24,46,0.8213496401520434,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:28:0694, discussion_open, 40471
2014-12-10 04:36:36:0510, list_mouseexited
2014-12-10 04:36:36:0510, list_mouseentered, type=detailAnswersList
2014-12-10 04:36:36:0650, list_mouseexited, type=detailAnswersList
2014-12-10 04:36:36:0806, answer_open, VisualItem[tree.nodes,2,id=40548,type=20,title=,body=<p>In addition to what izb said, <code>HashMap</code> allows null values, whereas the <code>Hashtable</code> does not.</p>

<p>Also note that <code>Hashtable</code> extends the <code>Dictionary</code> class, which as the <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Dictionary.html">Javadocs</a> state, is obsolete and has been replaced by the <code>Map</code> interface.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=23,searchfield=]
2014-12-10 04:36:36:0806, answer_open, VisualItem[tree.nodes,2,id=40548,type=20,title=,body=<p>In addition to what izb said, <code>HashMap</code> allows null values, whereas the <code>Hashtable</code> does not.</p>

<p>Also note that <code>Hashtable</code> extends the <code>Dictionary</code> class, which as the <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Dictionary.html">Javadocs</a> state, is obsolete and has been replaced by the <code>Map</code> interface.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=23,searchfield=]
2014-12-10 04:36:36:0806, diag_detail_itementered, id=40548, type=20
2014-12-10 04:36:36:0853, diag_detail_itemexited, id=40548, type=20
2014-12-10 04:36:37:0134, diag_detail_itementered, id=0.600565448875513, type=4
2014-12-10 04:36:37:0181, diag_detail_itemexited, id=0.600565448875513, type=4
2014-12-10 04:36:37:0259, diag_detail_itementered, id=0.29549738683205584, type=2
2014-12-10 04:36:37:0290, diag_detail_itemexited, id=0.29549738683205584, type=2
2014-12-10 04:36:37:0290, diag_detail_itementered, id=40471, type=1
2014-12-10 04:36:39:0848, diag_detail_itemexited, id=40471, type=1
2014-12-10 04:36:39:0864, diag_detail_itementered, id=0.29549738683205584, type=2
2014-12-10 04:36:39:0895, diag_detail_itemexited, id=0.29549738683205584, type=2
2014-12-10 04:36:39:0973, diag_detail_itementered, id=1215794844, type=3
2014-12-10 04:36:39:0989, diag_detail_itemexited, id=1215794844, type=3
2014-12-10 04:36:40:0004, diag_detail_itementered, id=0.8205010531955584, type=2
2014-12-10 04:36:40:0160, diag_detail_itemexited, id=0.8205010531955584, type=2
2014-12-10 04:36:40:0176, diag_detail_itementered, id=1215794844, type=3
2014-12-10 04:36:40:0628, diag_detail_itemexited, id=1215794844, type=3
2014-12-10 04:36:40:0628, diag_detail_itementered, id=0.8205010531955584, type=2
2014-12-10 04:36:40:0659, diag_detail_itemexited, id=0.8205010531955584, type=2
2014-12-10 04:36:40:0737, diag_detail_itementered, id=0.8205010531955584, type=2
2014-12-10 04:36:40:0769, diag_detail_itemexited, id=0.8205010531955584, type=2
2014-12-10 04:36:41:0517, diag_detail_itementered, id=4, type=0
2014-12-10 04:36:41:0549, diag_detail_itemexited, id=4, type=0
2014-12-10 04:36:41:0642, diag_detail_itementered, id=1215794844, type=3
2014-12-10 04:36:42:0407, diag_detail_itemclicked, id=1215794844, type=3
2014-12-10 04:36:42:0547, diag_detail_itemclicked, id=1215794844, type=3
2014-12-10 04:36:43:0873, diag_detail_itemexited, id=1215794844, type=3
2014-12-10 04:36:44:0450, diag_detail_itementered, id=1215794844, type=3
2014-12-10 04:36:44:0778, diag_detail_itemclicked, id=1215794844, type=3
2014-12-10 04:36:44:0903, diag_detail_itemclicked, id=1215794844, type=3
2014-12-10 04:36:45:0090, diag_detail_itemexited, id=1215794844, type=3
2014-12-10 04:36:45:0745, diag_detail_itementered, id=4, type=0
2014-12-10 04:36:47:0024, diag_detail_itemclicked, id=4, type=0
2014-12-10 04:36:47:0196, edge_create, Tuple[0,1,0.38107138151253117,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0196, edge_create, Tuple[1,2,0.6646818088611122,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0196, edge_create, Tuple[1,3,0.8125610755251794,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0211, edge_create, Tuple[1,4,0.24925228179227166,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0211, edge_create, Tuple[1,5,0.7116295005879856,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0227, edge_create, Tuple[1,6,0.8558064207245603,1,0.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0227, edge_create, Tuple[0,7,0.4090004374838647,2,1.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0227, pattern_create, 3
2014-12-10 04:36:47:0243, edge_create, Tuple[7,8,0.44929287455084665,2,1.0,1418246266163,1418246266163]
2014-12-10 04:36:47:0243, pattern_open, 4
2014-12-10 04:36:47:0243, diag_detail_itemclicked, id=4, type=0
2014-12-10 04:36:48:0303, diag_detail_itementered, id=0.38107138151253117, type=1
2014-12-10 04:36:48:0335, diag_detail_itemexited, id=0.38107138151253117, type=1
2014-12-10 04:36:48:0662, diag_detail_itementered, id=0.6646818088611122, type=1
2014-12-10 04:36:48:0694, diag_detail_itemexited, id=0.6646818088611122, type=1
2014-12-10 04:36:48:0772, diag_detail_itementered, id=11561, type=1
2014-12-10 04:38:29:0939, diag_detail_itemexited, id=11561, type=1
2014-12-10 04:38:40:0391, list_mouseentered, id=31693, type=1
2014-12-10 04:38:40:0391, list_mousemoved, id=31693, type=1
2014-12-10 04:38:40:0406, list_mousemoved, id=31693, type=1
2014-12-10 04:38:40:0422, list_mousemoved, id=31693, type=1
2014-12-10 04:38:40:0438, list_mouseexited
2014-12-10 04:38:42:0466, setup_loaddata_begin
2014-12-10 04:38:44:0197, setup_loaddata_end
2014-12-10 04:38:44:0197, setup_createactions_begin
2014-12-10 04:38:44:0228, setup_createactions_end
2014-12-10 04:38:44:0634, diag_itemexited, id=3, type=4
2014-12-10 04:38:45:0196, diag_itemexited, id=4, type=4
2014-12-10 04:38:45:0601, diag_itemexited, id=3, type=4
2014-12-10 04:38:45:0617, diag_itementered, id=382, type=1
2014-12-10 04:38:45:0664, diag_itemexited, id=382, type=1
2014-12-10 04:39:35:0179, diag_itemexited, id=4, type=4
2014-12-10 04:39:36:0458, diag_itementered, id=382, type=1
2014-12-10 04:39:36:0489, diag_itemexited, id=382, type=1
2014-12-10 04:39:36:0567, diag_itemexited, id=3, type=4
2014-12-10 04:39:36:0567, diag_itementered, id=46898, type=1
2014-12-10 04:39:36:0801, diag_itemexited, id=46898, type=1
2014-12-10 04:39:36:0863, diag_itemexited, id=3, type=4
2014-12-10 04:39:36:0863, diag_itementered, id=3, type=0
2014-12-10 04:39:44:0227, diag_itemexited, id=3, type=0
2014-12-10 04:39:44:0289, diag_itemexited, id=4, type=4
2014-12-10 04:39:44:0289, diag_itementered, id=41107, type=1
2014-12-10 04:39:44:0773, diag_itemexited, id=41107, type=1
2014-12-10 04:39:44:0773, diag_itementered, id=4, type=0
2014-12-10 04:39:48:0314, diag_itemexited, id=4, type=0
2014-12-10 04:39:48:0314, diag_itementered, id=41107, type=1
2014-12-10 04:39:48:0376, diag_itemexited, id=41107, type=1
2014-12-10 04:39:48:0454, list_mouseentered, id=56974, type=1
2014-12-10 04:39:48:0454, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0501, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0532, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0548, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0579, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0595, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0657, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0673, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0688, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0720, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0735, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0751, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0766, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0798, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0813, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0829, list_mousemoved, id=56974, type=1
2014-12-10 04:39:48:0860, list_mousemoved, id=8968, type=1
2014-12-10 04:39:48:0891, list_mouseexited
2014-12-10 04:39:49:0016, diag_itementered, id=35785, type=1
2014-12-10 04:39:49:0078, diag_itemexited, id=35785, type=1
2014-12-10 04:39:49:0172, diag_itemexited, id=4, type=4
2014-12-10 04:39:49:0188, diag_itementered, id=31693, type=1
2014-12-10 04:39:49:0250, diag_itemexited, id=31693, type=1
2014-12-10 04:39:49:0250, diag_itementered, id=4, type=0
2014-12-10 04:39:49:0921, diag_itemexited, id=4, type=0
2014-12-10 04:39:49:0983, diag_itemexited, id=4, type=4
2014-12-10 04:39:49:0983, diag_itementered, id=40471, type=1
2014-12-10 04:39:54:0741, diag_itemexited, id=40471, type=1
2014-12-10 04:39:54:0804, diag_itemexited, id=4, type=4
2014-12-10 04:39:54:0897, diag_itemexited, id=4, type=4
2014-12-10 04:39:54:0913, diag_itementered, id=22115, type=1
2014-12-10 04:39:54:0991, diag_itemexited, id=22115, type=1
2014-12-10 04:39:55:0116, diag_itemexited, id=4, type=4
2014-12-10 04:39:55:0131, diag_itementered, id=40471, type=1
2014-12-10 04:39:59:0031, diag_itemexited, id=40471, type=1
2014-12-10 04:39:59:0109, diag_itemexited, id=4, type=4
2014-12-10 04:39:59:0109, diag_itementered, id=1, type=0
2014-12-10 04:39:59:0156, diag_itemexited, id=1, type=0
2014-12-10 04:39:59:0406, diag_itemexited, id=3, type=4
2014-12-10 04:39:59:0406, diag_itementered, id=46898, type=1
2014-12-10 04:40:04:0991, diag_itemexited, id=46898, type=1
2014-12-10 04:40:05:0552, diag_itemexited, id=3, type=4
2014-12-10 04:40:05:0552, diag_itementered, id=46898, type=1
2014-12-10 04:40:07:0081, diag_itemexited, id=46898, type=1
2014-12-10 04:40:07:0159, diag_itemexited, id=3, type=4
2014-12-10 04:40:07:0175, diag_itementered, id=31693, type=1
2014-12-10 04:40:07:0237, diag_itemexited, id=31693, type=1
2014-12-10 04:40:07:0237, diag_itementered, id=36347, type=1
2014-12-10 04:45:00:0395, edge_create, Tuple[0,1,0.02935735393630501,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0395, answer_create, 498321
2014-12-10 04:45:00:0395, edge_create, Tuple[1,2,0.6415574721866639,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0395, answer_create, 36356
2014-12-10 04:45:00:0395, edge_create, Tuple[1,3,0.5155544397720433,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0395, answer_create, 36364
2014-12-10 04:45:00:0395, edge_create, Tuple[1,4,0.7954840616934749,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0395, answer_create, 41510
2014-12-10 04:45:00:0395, edge_create, Tuple[1,5,0.8899071791704525,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0395, answer_create, 41930
2014-12-10 04:45:00:0395, edge_create, Tuple[1,6,0.4358309756108949,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, answer_create, 498329
2014-12-10 04:45:00:0411, edge_create, Tuple[1,7,0.5960072178836888,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, answer_create, 499272
2014-12-10 04:45:00:0411, edge_create, Tuple[1,8,0.6660454222821917,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, answer_create, 499289
2014-12-10 04:45:00:0411, edge_create, Tuple[1,9,0.3665723455412191,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, answer_create, 41973
2014-12-10 04:45:00:0411, edge_create, Tuple[1,10,0.5593898493402497,4,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, edge_create, Tuple[0,11,0.033377160131059846,2,1.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, pattern_create, 4
2014-12-10 04:45:00:0411, edge_create, Tuple[11,12,0.9580976208731075,2,1.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, edge_create, Tuple[0,13,0.3452700536747223,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0411, edge_create, Tuple[13,14,0.6663709434561327,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0428, edge_create, Tuple[13,15,0.9701324052826911,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0429, edge_create, Tuple[13,16,0.1931284705157187,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0429, edge_create, Tuple[13,17,0.6727102154385626,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0444, edge_create, Tuple[13,18,0.03860858028714309,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0444, edge_create, Tuple[13,19,0.4622237657106585,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0460, edge_create, Tuple[13,20,0.7829771257927179,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0460, edge_create, Tuple[13,21,0.17532583920562883,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0475, edge_create, Tuple[13,22,0.22282376462959663,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0491, edge_create, Tuple[13,23,0.275748529303563,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0491, edge_create, Tuple[13,24,0.3263369513613491,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0507, edge_create, Tuple[13,25,0.5268907056312022,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0507, edge_create, Tuple[13,26,0.41912658807780334,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0522, edge_create, Tuple[13,27,0.9333176612804938,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0522, edge_create, Tuple[13,28,0.36483882594187056,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0538, edge_create, Tuple[13,29,0.8979601676641821,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0538, edge_create, Tuple[13,30,0.428235435560692,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0553, edge_create, Tuple[13,31,0.740625694663045,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0553, edge_create, Tuple[13,32,0.3792628843480964,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0569, edge_create, Tuple[13,33,0.5478101692248973,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0569, edge_create, Tuple[13,34,0.35641794391427006,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0585, edge_create, Tuple[13,35,0.14188659926792913,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0585, edge_create, Tuple[13,36,0.2136535590047386,1,0.0,1418246266163,1418246266163]
2014-12-10 04:45:00:0600, discussion_open, 36347
2014-12-10 04:45:00:0600, diag_itemclicked, id=36347, type=1
2014-12-10 04:50:28:0048, diag_itemexited, id=36347, type=1
2014-12-10 04:50:28:0079, answer_open, VisualItem[tree.nodes,7,id=498329,type=20,title=,body=<p>Java Generics are <strong>massively</strong> different to C++ templates.</p>

<p>Basically in C++ templates are basically a glorified preprocessor/macro set (<strong>Note:</strong> since some people seem unable to comprehend an analogy, I'm not saying template processing is a macro).  In Java they are basically syntactic sugar to minimize boilerplate casting of Objects.  Here is a pretty decent <a href="http://www.mindview.net/WebLog/log-0061">introduction to C++ templates vs Java generics</a>.</p>

<p>To elaborate on this point: when you use a C++ template, you're basically creating another copy of the code, just as if you used a <code>#define</code> macro.  This allows you to do things like have <code>int</code> parameters in template definitions that determine sizes of arrays and such.</p>

<p>Java doesn't work like that.  In Java all objects extent from <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html">java.lang.Object</a> so, pre-Generics, you'd write code like this:</p>

<pre><code>public class PhoneNumbers {
  private Map phoneNumbers = new HashMap();

  public String getPhoneNumber(String name) {
    return (String)phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>because all the Java collection types used Object as their base type so you could put anything in them.  Java 5 rolls around and adds generics so you can do things like:</p>

<pre><code>public class PhoneNumbers {
  private Map&lt;String, String&gt; phoneNumbers = new HashMap&lt;String, String&gt;();

  public String getPhoneNumber(String name) {
    return phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>And that's all Java Generics are: wrappers for casting objects.  That's because Java Generics aren't reified.  They use type erasure.  This decision was made because Java Generics came along so late in the piece that they didn't want to break backward compatibility (a <code>Map&lt;String, String&gt;</code> is usable whenever a <code>Map</code> is called for).  Compare this to .Net/C# where type erasure isn't used, which leads to all sorts of differences (eg you can use primitive types and <code>IEnumerable</code> and <code>IEnumerable&lt;T&gt;</code> bear no relation to each other).</p>

<p>And a class using generics compiled with a Java 5+ compiler is usable no JDK 1.4 (assuming it doesn't use any ohter features or classes that require Java 5+).</p>

<p>That's why Java Generics are called <a href="http://en.wikipedia.org/wiki/Syntactic_sugar">syntactic sugar</a>.</p>

<p>But this decision on how to do generics has profound effects so much so that the (superb) <a href="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html">Java Generics FAQ</a> has sprung up to answer the many, many questions people have about Java Generics.</p>

<p>C++ templates have a number of features that Java Generics don't:</p>

<ul>
<li>Use of primitive type arguments.</li>
</ul>

<p>For example:</p>

<pre><code>template&lt;class T, int i&gt;
class Matrix {
  int T[i][i];
  ...
}
</code></pre>

<ul>
<li>Use of <a href="http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/default_args_for_templ_params.htm">default type arguments</a>, which is one feature I miss in Java but there are backwards compatibility reasons for this;</li>
<li>C++ allows the use of primitive type arguments, Java doesn't; and</li>
<li>Java allows bounding of arguments.</li>
</ul>

<p>For example:</p>

<pre><code>public class ObservableList&lt;T extends List&gt; {
  ...
}
</code></pre>

<p>It really does need to be stressed that template invocations with different arguments really are different types.  They don't even share static members.  In Java this is not the case.</p>

<p>Aside from the differences with generics, for completeness, here is a <a href="http://www.javacoffeebreak.com/articles/thinkinginjava/comparingc++andjava.html">basic comparison of C++ and Java</a> (and <a href="http://triton.towson.edu/~mzimand/os/Lect2-java-tutorial.html">another one</a>).</p>

<p>And I can also suggest <a href="http://rads.stackoverflow.com/amzn/click/0131872486">Thinking in Java</a>.  As a C++ programmer a lot of the concepts like objects will be second nature already but there are subtle differences so it can be worthwhile to have an introductory text even if you skim parts.</p>

<p>A lot of what you'll learn when laerning Java is all the libraries (both standard--what comes in the JDK--and nonstandard, which includes commonly used things like Spring).  Java syntax is more verbose than C++ syntax and doesn't have a lot of C++ features (eg operator overloading, mutliple inheritance, the destructor mechanism, etc) but that doesn't strictly make it a subset of C++ either.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=42,searchfield=]
2014-12-10 04:50:28:0079, answer_open, VisualItem[tree.nodes,7,id=498329,type=20,title=,body=<p>Java Generics are <strong>massively</strong> different to C++ templates.</p>

<p>Basically in C++ templates are basically a glorified preprocessor/macro set (<strong>Note:</strong> since some people seem unable to comprehend an analogy, I'm not saying template processing is a macro).  In Java they are basically syntactic sugar to minimize boilerplate casting of Objects.  Here is a pretty decent <a href="http://www.mindview.net/WebLog/log-0061">introduction to C++ templates vs Java generics</a>.</p>

<p>To elaborate on this point: when you use a C++ template, you're basically creating another copy of the code, just as if you used a <code>#define</code> macro.  This allows you to do things like have <code>int</code> parameters in template definitions that determine sizes of arrays and such.</p>

<p>Java doesn't work like that.  In Java all objects extent from <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html">java.lang.Object</a> so, pre-Generics, you'd write code like this:</p>

<pre><code>public class PhoneNumbers {
  private Map phoneNumbers = new HashMap();

  public String getPhoneNumber(String name) {
    return (String)phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>because all the Java collection types used Object as their base type so you could put anything in them.  Java 5 rolls around and adds generics so you can do things like:</p>

<pre><code>public class PhoneNumbers {
  private Map&lt;String, String&gt; phoneNumbers = new HashMap&lt;String, String&gt;();

  public String getPhoneNumber(String name) {
    return phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>And that's all Java Generics are: wrappers for casting objects.  That's because Java Generics aren't reified.  They use type erasure.  This decision was made because Java Generics came along so late in the piece that they didn't want to break backward compatibility (a <code>Map&lt;String, String&gt;</code> is usable whenever a <code>Map</code> is called for).  Compare this to .Net/C# where type erasure isn't used, which leads to all sorts of differences (eg you can use primitive types and <code>IEnumerable</code> and <code>IEnumerable&lt;T&gt;</code> bear no relation to each other).</p>

<p>And a class using generics compiled with a Java 5+ compiler is usable no JDK 1.4 (assuming it doesn't use any ohter features or classes that require Java 5+).</p>

<p>That's why Java Generics are called <a href="http://en.wikipedia.org/wiki/Syntactic_sugar">syntactic sugar</a>.</p>

<p>But this decision on how to do generics has profound effects so much so that the (superb) <a href="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html">Java Generics FAQ</a> has sprung up to answer the many, many questions people have about Java Generics.</p>

<p>C++ templates have a number of features that Java Generics don't:</p>

<ul>
<li>Use of primitive type arguments.</li>
</ul>

<p>For example:</p>

<pre><code>template&lt;class T, int i&gt;
class Matrix {
  int T[i][i];
  ...
}
</code></pre>

<ul>
<li>Use of <a href="http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/default_args_for_templ_params.htm">default type arguments</a>, which is one feature I miss in Java but there are backwards compatibility reasons for this;</li>
<li>C++ allows the use of primitive type arguments, Java doesn't; and</li>
<li>Java allows bounding of arguments.</li>
</ul>

<p>For example:</p>

<pre><code>public class ObservableList&lt;T extends List&gt; {
  ...
}
</code></pre>

<p>It really does need to be stressed that template invocations with different arguments really are different types.  They don't even share static members.  In Java this is not the case.</p>

<p>Aside from the differences with generics, for completeness, here is a <a href="http://www.javacoffeebreak.com/articles/thinkinginjava/comparingc++andjava.html">basic comparison of C++ and Java</a> (and <a href="http://triton.towson.edu/~mzimand/os/Lect2-java-tutorial.html">another one</a>).</p>

<p>And I can also suggest <a href="http://rads.stackoverflow.com/amzn/click/0131872486">Thinking in Java</a>.  As a C++ programmer a lot of the concepts like objects will be second nature already but there are subtle differences so it can be worthwhile to have an introductory text even if you skim parts.</p>

<p>A lot of what you'll learn when laerning Java is all the libraries (both standard--what comes in the JDK--and nonstandard, which includes commonly used things like Spring).  Java syntax is more verbose than C++ syntax and doesn't have a lot of C++ features (eg operator overloading, mutliple inheritance, the destructor mechanism, etc) but that doesn't strictly make it a subset of C++ either.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=42,searchfield=]
2014-12-10 04:50:28:0079, diag_detail_itementered, id=498329, type=20
2014-12-10 04:50:28:0142, diag_detail_itemexited, id=498329, type=20
2014-12-10 04:50:28:0282, answer_open, VisualItem[tree.nodes,7,id=498329,type=20,title=,body=<p>Java Generics are <strong>massively</strong> different to C++ templates.</p>

<p>Basically in C++ templates are basically a glorified preprocessor/macro set (<strong>Note:</strong> since some people seem unable to comprehend an analogy, I'm not saying template processing is a macro).  In Java they are basically syntactic sugar to minimize boilerplate casting of Objects.  Here is a pretty decent <a href="http://www.mindview.net/WebLog/log-0061">introduction to C++ templates vs Java generics</a>.</p>

<p>To elaborate on this point: when you use a C++ template, you're basically creating another copy of the code, just as if you used a <code>#define</code> macro.  This allows you to do things like have <code>int</code> parameters in template definitions that determine sizes of arrays and such.</p>

<p>Java doesn't work like that.  In Java all objects extent from <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html">java.lang.Object</a> so, pre-Generics, you'd write code like this:</p>

<pre><code>public class PhoneNumbers {
  private Map phoneNumbers = new HashMap();

  public String getPhoneNumber(String name) {
    return (String)phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>because all the Java collection types used Object as their base type so you could put anything in them.  Java 5 rolls around and adds generics so you can do things like:</p>

<pre><code>public class PhoneNumbers {
  private Map&lt;String, String&gt; phoneNumbers = new HashMap&lt;String, String&gt;();

  public String getPhoneNumber(String name) {
    return phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>And that's all Java Generics are: wrappers for casting objects.  That's because Java Generics aren't reified.  They use type erasure.  This decision was made because Java Generics came along so late in the piece that they didn't want to break backward compatibility (a <code>Map&lt;String, String&gt;</code> is usable whenever a <code>Map</code> is called for).  Compare this to .Net/C# where type erasure isn't used, which leads to all sorts of differences (eg you can use primitive types and <code>IEnumerable</code> and <code>IEnumerable&lt;T&gt;</code> bear no relation to each other).</p>

<p>And a class using generics compiled with a Java 5+ compiler is usable no JDK 1.4 (assuming it doesn't use any ohter features or classes that require Java 5+).</p>

<p>That's why Java Generics are called <a href="http://en.wikipedia.org/wiki/Syntactic_sugar">syntactic sugar</a>.</p>

<p>But this decision on how to do generics has profound effects so much so that the (superb) <a href="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html">Java Generics FAQ</a> has sprung up to answer the many, many questions people have about Java Generics.</p>

<p>C++ templates have a number of features that Java Generics don't:</p>

<ul>
<li>Use of primitive type arguments.</li>
</ul>

<p>For example:</p>

<pre><code>template&lt;class T, int i&gt;
class Matrix {
  int T[i][i];
  ...
}
</code></pre>

<ul>
<li>Use of <a href="http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/default_args_for_templ_params.htm">default type arguments</a>, which is one feature I miss in Java but there are backwards compatibility reasons for this;</li>
<li>C++ allows the use of primitive type arguments, Java doesn't; and</li>
<li>Java allows bounding of arguments.</li>
</ul>

<p>For example:</p>

<pre><code>public class ObservableList&lt;T extends List&gt; {
  ...
}
</code></pre>

<p>It really does need to be stressed that template invocations with different arguments really are different types.  They don't even share static members.  In Java this is not the case.</p>

<p>Aside from the differences with generics, for completeness, here is a <a href="http://www.javacoffeebreak.com/articles/thinkinginjava/comparingc++andjava.html">basic comparison of C++ and Java</a> (and <a href="http://triton.towson.edu/~mzimand/os/Lect2-java-tutorial.html">another one</a>).</p>

<p>And I can also suggest <a href="http://rads.stackoverflow.com/amzn/click/0131872486">Thinking in Java</a>.  As a C++ programmer a lot of the concepts like objects will be second nature already but there are subtle differences so it can be worthwhile to have an introductory text even if you skim parts.</p>

<p>A lot of what you'll learn when laerning Java is all the libraries (both standard--what comes in the JDK--and nonstandard, which includes commonly used things like Spring).  Java syntax is more verbose than C++ syntax and doesn't have a lot of C++ features (eg operator overloading, mutliple inheritance, the destructor mechanism, etc) but that doesn't strictly make it a subset of C++ either.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=42,searchfield=]
2014-12-10 04:50:28:0298, answer_open, VisualItem[tree.nodes,7,id=498329,type=20,title=,body=<p>Java Generics are <strong>massively</strong> different to C++ templates.</p>

<p>Basically in C++ templates are basically a glorified preprocessor/macro set (<strong>Note:</strong> since some people seem unable to comprehend an analogy, I'm not saying template processing is a macro).  In Java they are basically syntactic sugar to minimize boilerplate casting of Objects.  Here is a pretty decent <a href="http://www.mindview.net/WebLog/log-0061">introduction to C++ templates vs Java generics</a>.</p>

<p>To elaborate on this point: when you use a C++ template, you're basically creating another copy of the code, just as if you used a <code>#define</code> macro.  This allows you to do things like have <code>int</code> parameters in template definitions that determine sizes of arrays and such.</p>

<p>Java doesn't work like that.  In Java all objects extent from <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html">java.lang.Object</a> so, pre-Generics, you'd write code like this:</p>

<pre><code>public class PhoneNumbers {
  private Map phoneNumbers = new HashMap();

  public String getPhoneNumber(String name) {
    return (String)phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>because all the Java collection types used Object as their base type so you could put anything in them.  Java 5 rolls around and adds generics so you can do things like:</p>

<pre><code>public class PhoneNumbers {
  private Map&lt;String, String&gt; phoneNumbers = new HashMap&lt;String, String&gt;();

  public String getPhoneNumber(String name) {
    return phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>And that's all Java Generics are: wrappers for casting objects.  That's because Java Generics aren't reified.  They use type erasure.  This decision was made because Java Generics came along so late in the piece that they didn't want to break backward compatibility (a <code>Map&lt;String, String&gt;</code> is usable whenever a <code>Map</code> is called for).  Compare this to .Net/C# where type erasure isn't used, which leads to all sorts of differences (eg you can use primitive types and <code>IEnumerable</code> and <code>IEnumerable&lt;T&gt;</code> bear no relation to each other).</p>

<p>And a class using generics compiled with a Java 5+ compiler is usable no JDK 1.4 (assuming it doesn't use any ohter features or classes that require Java 5+).</p>

<p>That's why Java Generics are called <a href="http://en.wikipedia.org/wiki/Syntactic_sugar">syntactic sugar</a>.</p>

<p>But this decision on how to do generics has profound effects so much so that the (superb) <a href="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html">Java Generics FAQ</a> has sprung up to answer the many, many questions people have about Java Generics.</p>

<p>C++ templates have a number of features that Java Generics don't:</p>

<ul>
<li>Use of primitive type arguments.</li>
</ul>

<p>For example:</p>

<pre><code>template&lt;class T, int i&gt;
class Matrix {
  int T[i][i];
  ...
}
</code></pre>

<ul>
<li>Use of <a href="http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/default_args_for_templ_params.htm">default type arguments</a>, which is one feature I miss in Java but there are backwards compatibility reasons for this;</li>
<li>C++ allows the use of primitive type arguments, Java doesn't; and</li>
<li>Java allows bounding of arguments.</li>
</ul>

<p>For example:</p>

<pre><code>public class ObservableList&lt;T extends List&gt; {
  ...
}
</code></pre>

<p>It really does need to be stressed that template invocations with different arguments really are different types.  They don't even share static members.  In Java this is not the case.</p>

<p>Aside from the differences with generics, for completeness, here is a <a href="http://www.javacoffeebreak.com/articles/thinkinginjava/comparingc++andjava.html">basic comparison of C++ and Java</a> (and <a href="http://triton.towson.edu/~mzimand/os/Lect2-java-tutorial.html">another one</a>).</p>

<p>And I can also suggest <a href="http://rads.stackoverflow.com/amzn/click/0131872486">Thinking in Java</a>.  As a C++ programmer a lot of the concepts like objects will be second nature already but there are subtle differences so it can be worthwhile to have an introductory text even if you skim parts.</p>

<p>A lot of what you'll learn when laerning Java is all the libraries (both standard--what comes in the JDK--and nonstandard, which includes commonly used things like Spring).  Java syntax is more verbose than C++ syntax and doesn't have a lot of C++ features (eg operator overloading, mutliple inheritance, the destructor mechanism, etc) but that doesn't strictly make it a subset of C++ either.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=42,searchfield=]
2014-12-10 04:50:28:0298, diag_detail_itementered, id=498329, type=20
2014-12-10 04:50:28:0360, diag_detail_itemexited, id=498329, type=20
2014-12-10 04:50:28:0750, answer_open, VisualItem[tree.nodes,7,id=498329,type=20,title=,body=<p>Java Generics are <strong>massively</strong> different to C++ templates.</p>

<p>Basically in C++ templates are basically a glorified preprocessor/macro set (<strong>Note:</strong> since some people seem unable to comprehend an analogy, I'm not saying template processing is a macro).  In Java they are basically syntactic sugar to minimize boilerplate casting of Objects.  Here is a pretty decent <a href="http://www.mindview.net/WebLog/log-0061">introduction to C++ templates vs Java generics</a>.</p>

<p>To elaborate on this point: when you use a C++ template, you're basically creating another copy of the code, just as if you used a <code>#define</code> macro.  This allows you to do things like have <code>int</code> parameters in template definitions that determine sizes of arrays and such.</p>

<p>Java doesn't work like that.  In Java all objects extent from <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html">java.lang.Object</a> so, pre-Generics, you'd write code like this:</p>

<pre><code>public class PhoneNumbers {
  private Map phoneNumbers = new HashMap();

  public String getPhoneNumber(String name) {
    return (String)phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>because all the Java collection types used Object as their base type so you could put anything in them.  Java 5 rolls around and adds generics so you can do things like:</p>

<pre><code>public class PhoneNumbers {
  private Map&lt;String, String&gt; phoneNumbers = new HashMap&lt;String, String&gt;();

  public String getPhoneNumber(String name) {
    return phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>And that's all Java Generics are: wrappers for casting objects.  That's because Java Generics aren't reified.  They use type erasure.  This decision was made because Java Generics came along so late in the piece that they didn't want to break backward compatibility (a <code>Map&lt;String, String&gt;</code> is usable whenever a <code>Map</code> is called for).  Compare this to .Net/C# where type erasure isn't used, which leads to all sorts of differences (eg you can use primitive types and <code>IEnumerable</code> and <code>IEnumerable&lt;T&gt;</code> bear no relation to each other).</p>

<p>And a class using generics compiled with a Java 5+ compiler is usable no JDK 1.4 (assuming it doesn't use any ohter features or classes that require Java 5+).</p>

<p>That's why Java Generics are called <a href="http://en.wikipedia.org/wiki/Syntactic_sugar">syntactic sugar</a>.</p>

<p>But this decision on how to do generics has profound effects so much so that the (superb) <a href="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html">Java Generics FAQ</a> has sprung up to answer the many, many questions people have about Java Generics.</p>

<p>C++ templates have a number of features that Java Generics don't:</p>

<ul>
<li>Use of primitive type arguments.</li>
</ul>

<p>For example:</p>

<pre><code>template&lt;class T, int i&gt;
class Matrix {
  int T[i][i];
  ...
}
</code></pre>

<ul>
<li>Use of <a href="http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/default_args_for_templ_params.htm">default type arguments</a>, which is one feature I miss in Java but there are backwards compatibility reasons for this;</li>
<li>C++ allows the use of primitive type arguments, Java doesn't; and</li>
<li>Java allows bounding of arguments.</li>
</ul>

<p>For example:</p>

<pre><code>public class ObservableList&lt;T extends List&gt; {
  ...
}
</code></pre>

<p>It really does need to be stressed that template invocations with different arguments really are different types.  They don't even share static members.  In Java this is not the case.</p>

<p>Aside from the differences with generics, for completeness, here is a <a href="http://www.javacoffeebreak.com/articles/thinkinginjava/comparingc++andjava.html">basic comparison of C++ and Java</a> (and <a href="http://triton.towson.edu/~mzimand/os/Lect2-java-tutorial.html">another one</a>).</p>

<p>And I can also suggest <a href="http://rads.stackoverflow.com/amzn/click/0131872486">Thinking in Java</a>.  As a C++ programmer a lot of the concepts like objects will be second nature already but there are subtle differences so it can be worthwhile to have an introductory text even if you skim parts.</p>

<p>A lot of what you'll learn when laerning Java is all the libraries (both standard--what comes in the JDK--and nonstandard, which includes commonly used things like Spring).  Java syntax is more verbose than C++ syntax and doesn't have a lot of C++ features (eg operator overloading, mutliple inheritance, the destructor mechanism, etc) but that doesn't strictly make it a subset of C++ either.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=42,searchfield=]
2014-12-10 04:50:28:0766, answer_open, VisualItem[tree.nodes,7,id=498329,type=20,title=,body=<p>Java Generics are <strong>massively</strong> different to C++ templates.</p>

<p>Basically in C++ templates are basically a glorified preprocessor/macro set (<strong>Note:</strong> since some people seem unable to comprehend an analogy, I'm not saying template processing is a macro).  In Java they are basically syntactic sugar to minimize boilerplate casting of Objects.  Here is a pretty decent <a href="http://www.mindview.net/WebLog/log-0061">introduction to C++ templates vs Java generics</a>.</p>

<p>To elaborate on this point: when you use a C++ template, you're basically creating another copy of the code, just as if you used a <code>#define</code> macro.  This allows you to do things like have <code>int</code> parameters in template definitions that determine sizes of arrays and such.</p>

<p>Java doesn't work like that.  In Java all objects extent from <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html">java.lang.Object</a> so, pre-Generics, you'd write code like this:</p>

<pre><code>public class PhoneNumbers {
  private Map phoneNumbers = new HashMap();

  public String getPhoneNumber(String name) {
    return (String)phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>because all the Java collection types used Object as their base type so you could put anything in them.  Java 5 rolls around and adds generics so you can do things like:</p>

<pre><code>public class PhoneNumbers {
  private Map&lt;String, String&gt; phoneNumbers = new HashMap&lt;String, String&gt;();

  public String getPhoneNumber(String name) {
    return phoneNumbers.get(name);
  }

  ...
}
</code></pre>

<p>And that's all Java Generics are: wrappers for casting objects.  That's because Java Generics aren't reified.  They use type erasure.  This decision was made because Java Generics came along so late in the piece that they didn't want to break backward compatibility (a <code>Map&lt;String, String&gt;</code> is usable whenever a <code>Map</code> is called for).  Compare this to .Net/C# where type erasure isn't used, which leads to all sorts of differences (eg you can use primitive types and <code>IEnumerable</code> and <code>IEnumerable&lt;T&gt;</code> bear no relation to each other).</p>

<p>And a class using generics compiled with a Java 5+ compiler is usable no JDK 1.4 (assuming it doesn't use any ohter features or classes that require Java 5+).</p>

<p>That's why Java Generics are called <a href="http://en.wikipedia.org/wiki/Syntactic_sugar">syntactic sugar</a>.</p>

<p>But this decision on how to do generics has profound effects so much so that the (superb) <a href="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html">Java Generics FAQ</a> has sprung up to answer the many, many questions people have about Java Generics.</p>

<p>C++ templates have a number of features that Java Generics don't:</p>

<ul>
<li>Use of primitive type arguments.</li>
</ul>

<p>For example:</p>

<pre><code>template&lt;class T, int i&gt;
class Matrix {
  int T[i][i];
  ...
}
</code></pre>

<ul>
<li>Use of <a href="http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/default_args_for_templ_params.htm">default type arguments</a>, which is one feature I miss in Java but there are backwards compatibility reasons for this;</li>
<li>C++ allows the use of primitive type arguments, Java doesn't; and</li>
<li>Java allows bounding of arguments.</li>
</ul>

<p>For example:</p>

<pre><code>public class ObservableList&lt;T extends List&gt; {
  ...
}
</code></pre>

<p>It really does need to be stressed that template invocations with different arguments really are different types.  They don't even share static members.  In Java this is not the case.</p>

<p>Aside from the differences with generics, for completeness, here is a <a href="http://www.javacoffeebreak.com/articles/thinkinginjava/comparingc++andjava.html">basic comparison of C++ and Java</a> (and <a href="http://triton.towson.edu/~mzimand/os/Lect2-java-tutorial.html">another one</a>).</p>

<p>And I can also suggest <a href="http://rads.stackoverflow.com/amzn/click/0131872486">Thinking in Java</a>.  As a C++ programmer a lot of the concepts like objects will be second nature already but there are subtle differences so it can be worthwhile to have an introductory text even if you skim parts.</p>

<p>A lot of what you'll learn when laerning Java is all the libraries (both standard--what comes in the JDK--and nonstandard, which includes commonly used things like Spring).  Java syntax is more verbose than C++ syntax and doesn't have a lot of C++ features (eg operator overloading, mutliple inheritance, the destructor mechanism, etc) but that doesn't strictly make it a subset of C++ either.</p>
,solution=,x=0.0,y=0.0,viewcount=0,answercount=0,acceptedanswerid=-1,owner=Anonymous,lasteditdate=1418246266163L,lastactivitydate=0L,tags=,score=42,searchfield=]
2014-12-10 04:50:28:0766, diag_detail_itementered, id=498329, type=20
2014-12-10 04:50:30:0201, diag_detail_itemexited, id=498329, type=20
2014-12-10 04:50:30:0310, diag_detail_itementered, id=205834262, type=3
2014-12-10 04:50:30:0372, diag_detail_itemexited, id=205834262, type=3
2014-12-10 04:50:31:0184, diag_detail_itementered, id=0.2136535590047386, type=1
2014-12-10 04:50:31:0199, diag_detail_itemexited, id=0.2136535590047386, type=1
2014-12-10 04:50:31:0449, diag_detail_itementered, id=66446, type=1
2014-12-10 04:51:46:0454, diag_detail_itemexited, id=66446, type=1
2014-12-10 04:51:46:0595, diag_detail_itementered, id=0.2136535590047386, type=1
2014-12-10 04:51:46:0876, diag_detail_itemexited, id=0.2136535590047386, type=1
2014-12-10 04:51:47:0406, diag_detail_itementered, id=66446, type=1
2014-12-10 04:52:41:0351, diag_detail_itemexited, id=66446, type=1
2014-12-10 04:52:41:0414, diag_detail_itementered, id=0.3792628843480964, type=1
2014-12-10 04:52:41:0445, diag_detail_itemexited, id=0.3792628843480964, type=1
2014-12-10 04:52:42:0521, diag_itementered, id=45546, type=1
2014-12-10 04:52:42:0568, diag_itemexited, id=45546, type=1
2014-12-10 04:52:47:0295, diag_itementered, id=65310, type=1
2014-12-10 04:52:47:0358, diag_itemexited, id=65310, type=1
2014-12-10 04:52:47:0389, diag_itementered, id=3049, type=1
2014-12-10 04:52:47:0451, diag_itemexited, id=3049, type=1
2014-12-10 04:52:47:0576, diag_itemexited, id=1, type=4
2014-12-10 04:52:47:0576, diag_itementered, id=564, type=1
2014-12-10 04:52:47:0638, diag_itemexited, id=564, type=1
2014-12-10 04:52:47:0701, diag_itemexited, id=4, type=4
2014-12-10 04:52:47:0732, diag_itementered, id=4, type=0
2014-12-10 04:52:48:0325, diag_itemexited, id=4, type=0
2014-12-10 04:52:48:0387, diag_itemexited, id=4, type=4
2014-12-10 04:52:48:0387, diag_itementered, id=3, type=0
2014-12-10 04:52:49:0417, diag_itemexited, id=3, type=0
2014-12-10 04:52:49:0417, diag_itementered, id=1, type=0
2014-12-10 04:52:49:0479, diag_itemexited, id=1, type=0
2014-12-10 04:52:49:0542, diag_itemexited, id=1, type=4
2014-12-10 04:52:53:0005, diag_itemexited, id=1, type=4
2014-12-10 04:52:53:0020, diag_itementered, id=1, type=0
2014-12-10 04:52:53:0083, diag_itemexited, id=1, type=0
2014-12-10 04:52:53:0520, diag_itemexited, id=4, type=4
2014-12-10 04:52:53:0551, diag_itemexited, id=2, type=4
2014-12-10 04:52:53:0582, diag_itementered, id=65035, type=1
2014-12-10 04:52:53:0707, diag_itemexited, id=65035, type=1
2014-12-10 04:52:53:0832, diag_itemexited, id=2, type=4
2014-12-10 04:52:53:0832, diag_itementered, id=2, type=0
2014-12-10 04:52:58:0590, diag_itemexited, id=2, type=0
2014-12-10 04:52:58:0683, diag_itemexited, id=4, type=4
2014-12-10 04:52:58:0683, diag_itementered, id=4, type=0
2014-12-10 04:52:59:0463, diag_itemexited, id=4, type=0
2014-12-10 04:52:59:0526, diag_itemexited, id=4, type=4
2014-12-10 04:52:59:0526, diag_itementered, id=1, type=0
2014-12-10 04:52:59:0635, diag_itemexited, id=1, type=0
2014-12-10 04:52:59:0635, diag_itementered, id=3, type=0
2014-12-10 04:53:00:0352, diag_itemexited, id=3, type=0
2014-12-10 04:53:00:0352, diag_itementered, id=1, type=0
2014-12-10 04:53:00:0742, diag_itemexited, id=1, type=0
2014-12-10 04:53:00:0805, diag_itemexited, id=4, type=4
2014-12-10 04:53:00:0852, diag_itemexited, id=1, type=4
